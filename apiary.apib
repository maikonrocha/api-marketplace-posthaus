FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# API Marketplace Posthaus

This API intends to integrate the data between the Posthaus Marketplace Platform and the Sellers.

**Note:** Non-mandatory attributes and parameters will be identified with the "optional".

## Rate Limiting

This feature limit how many request a seller integration could do in the same secound.
Default value is 10 requests in the same one second window. When your integration exhaust this number, the response is going to be http-code 429 (Message Body: Too Many Requests).
According seller integration behaviour, we can define a specific limit number.

# Group Notifications
The Marketplace Posthaus add notifications into a queue, the queue order is from the oldest to the newest notification added.
These GET service is going to return one list ordered ascending according its creation date. After these notification is marked as readed, this notification is going to be removed from de notification feed. 
If the notification won't be readed during 30 days, the SellerCenter is going to automatically mark as read it.

## Order Notifications [/rest/feed/orders/v1/{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + notifications (NotificationsWithPartnerId)
    + page (Page)
    + exception (Exception)    


### Get order notifications list [GET]
Get a paginated notifications list. Events type supported: NEW_ORDER, AUTHORIZED and CANCELED.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
          "notifications": [
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "NEW_ORDER",
              "additionalData": {
                "orderId": 45687920
              }
            },
            {
              "token": "45g65d4sdf5465sdrr",
              "type": "CANCELED",
              "additionalData": {
                "orderId": 45687918
              }
            },
            {
              "token": "33g65d4sdf5465sdf5",
              "type": "AUTHORIZED",
              "additionalData": {
                "orderId": 45687921,
                "partnerId": "9045687921"
              }
            }            
          ],
          "page": {
            "size": 3,
            "totalElements": 6,
            "totalPages": 3,
            "number": 1
          }

        }
        
+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }


## Stock Inconsistent Notifications [/rest/feed/stock/inconsistent/v1{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `100`

+ Attributes (object)
    + notifications (NotificationsStockInc)
    + page (Page)


### Get Stock inconsistent notifications list [GET]
Get a paginated notifications list. Events type supported: STOCK_INCONSISTENCY.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {  
           "notifications":[  
              {  
                 "token":"45g65d4sdf5465sdf5",
                 "type":"STOCK_INCONSISTENCY",
                 "additionalData":{  
                    "sku":{  
                       "partnerId":"489764987"
                    }
                 }
              },
              {  
                 "token":"45g65d4sdf5465sdf5",
                 "type":"STOCK_INCONSISTENCY",
                 "additionalData":{  
                    "sku":{  
                       "partnerId":"489764987"
                    }
                 }
              }
           ],
           "page":{  
              "size":4,
              "totalElements":6,
              "totalPages":3,
              "number":1
           }
        }

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }


## Stock Notifications [/rest/feed/stock/v1{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `100`

+ Attributes (object)
    + notifications (Notifications)
    + page (Page)


### Get Stock notifications list [GET]
Get a paginated notifications list. Events type supported: UPDATE_STOCK.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
          "notifications": [
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "UPDATE_STOCK",
              "additionalData": {
                "updateStockID": "1f94f503-84b4-484b-bf3c-d9a329a68707",
                "totalUpdateSKU": 1645,
                "notFoundSkusId": [
                    "489764654",
                    "489764965",
                    "489764957"
                ]
              }
            },
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "UPDATE_STOCK",
              "additionalData": {
                "updateStockID": "1f94f503-84b4-484b-bf3c-d9a329a68707",
                "totalUpdateSKU": 1645,
                "notFoundSkusId": [
                          "489764654",
                          "489764965",
                          "489764957"
                ]
              }
            },
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "UPDATE_STOCK",
              "additionalData": {
                "updateStockID": "1f94f503-84b4-484b-bf3c-d9a329a68707",
                "totalUpdateSKU": 1645,
                "notFoundSkusId": [
                    "489764654",
                    "489764965",
                    "489764957"
                ]
              }
            }
          ],
          "page": {
            "size": 3,
            "totalElements": 6,
            "totalPages": 3,
            "number": 1
          }
        }

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }
        
        
## Price Notifications [/rest/feed/price/v1{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `100`

+ Attributes (object)
    + notifications (NotificationsPrices)
    + page (Page)


### Get Update Prices notifications list [GET]
Get a paginated notifications list. Events type supported: UPDATE_BATCH_PRICES.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

         { 
           "notifications":[ 
              { 
                 "token":"934E146039256F00E053100010AC829E",
                 "type":"UPDATE_PRICES",
                 "additionalData":{ 
                    "updatePricesID":"77506cf0-ad77-4f74-8df3-1a0bf4ebb302",
                    "totalUpdateSKU":10,
                    "skuPartnerIdsFault":[ 
                       "701014571135",
                       "701014571136",
                       "701014571137",
                       "701014571138",
                       "701014571139",
                       "701014571140",
                       "701014571141",
                       "701014571142",
                       "701014571143",
                       "701014571144"
                    ]
                 }
              },
              { 
                 "token":"934E286885896EFEE053100010ACFC70",
                 "type":"UPDATE_PRICES",
                 "additionalData":{ 
                    "updatePricesID":"287ca806-46d0-41f2-a867-183260f773f5",
                    "totalUpdateSKU":10,
                    "skuPartnerIdsFault":[ 
                       "701014571135",
                       "701014571136",
                       "701014571137",
                       "701014571138",
                       "701014571139",
                       "701014571140",
                       "701014571141",
                       "701014571142",
                       "701014571143",
                       "701014571144"
                    ]
                 }
              },
              { 
                 "token":"936446E820484259E053100010ACC681",
                 "type":"UPDATE_PRICES",
                 "additionalData":{ 
                    "updatePricesID":"ed4a7765-5813-447d-bd6d-95c35693a8ab",
                    "totalUpdateSKU":10,
                    "skuPartnerIdsFault":[ 
                       "701014571135",
                       "701014571136",
                       "701014571137",
                       "701014571138",
                       "701014571139",
                       "701014571140",
                       "701014571141",
                       "701014571142",
                       "701014571143",
                       "701014571144"
                    ]
                 }
              }
           ],
           "page":{ 
              "size":10,
              "totalElements":3,
              "totalPages":1,
              "number":1
           }
        }

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }
        
## Product Notifications [/rest/feed/product/v2{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `10`

+ Attributes (object)
    + notifications (NotificationsProduct)
    + page (Page)

### Get Product notifications list [GET]
Get a notifications list. Events type supported: NEW_PRODUCT, UPDATE_PRODUCT, NEW_VARIATION, NEW_SKU AND NEW_IMAGE.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {  
           "notifications":[  
              {  
                 "token":"90299E3C15355D8DE053100010ACBDB3",
                 "type":"NEW_PRODUCT",
                 "additionalData":{  
                    "success":true,
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                    "product":{  
                       "productGroupPartnerId":"prd_grp_ptnr_id-d2f303f062"
                    }
                 }
              },
              {  
                 "token":"8E9C157A64C60BE4E053100010ACD935",
                 "type":"NEW_PRODUCT",
                 "additionalData":{  
                    "success":false,
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                    "product":{  
                       "productGroupPartnerId":"53740976"
                    },
                    "faults":[  
                       {  
                          "exceptionTypeName":"PosthausInvalidProductBrandException",
                          "message":"Invalid product brand (id: 'null', partnerId: 'Adidas').",
                          "attOrArgName":"brand.partnerId"
                       },
                       {  
                          "exceptionTypeName":"PosthausInvalidProductSizeException",
                          "message":"Invalid SKU size (size: '28').",
                          "attOrArgName":"variations[0].skus[0].size.partnerId"
                       },
                       {  
                          "exceptionTypeName":"PosthausImageException",
                          "message":"Invalid image url (url: 'https://img.passarela.com.br/imagens/produto/53740976.tenis-infantil-adidas-quickrun-2-k.Azul.1.jpg').",
                          "attOrArgName":"url"
                       }
                    ]
                 }
              },
              {  
                 "token":"907C7CD2CD3FD286E053100010AC80F9",
                 "type":"UPDATE_PRODUCT",
                 "additionalData":{  
                    "success":true,
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                    "product":{  
                       "productGroupPartnerId":"prd_grp_ptnr_id-ed591deb38"
                    }
                 }
              },
              {  
                 "token":"907D2812FAC57FF3E053100010AC4276",
                 "type":"UPDATE_PRODUCT",
                 "additionalData":{  
                    "success":false,
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                    "product":{  
                       "productGroupPartnerId":"prd_grp_ptnr_id-6198c156c6"
                    },
                    "faults":[  
                       {  
                          "exceptionTypeName":"PosthausInvalidProductCategoryException",
                          "message":"Invalid product category (partnerId: 'Categoria Seller Teste').",
                          "attOrArgName":"category.partnerId"
                       },
                       {  
                          "exceptionTypeName":"PosthausInvalidProductCategoryException",
                          "message":"Invalid product category (partnerId: 'Categoria Seller Teste').",
                          "attOrArgName":"category.subCategory.partnerId"
                       },
                       {  
                          "exceptionTypeName":"PosthausInvalidProductCategoryException",
                          "message":"Invalid product category (partnerId: 'Categoria Seller Teste').",
                          "attOrArgName":"category.subClass.partnerId"
                       }
                    ]
                 }
              },
              {  
                 "token":"908C16E9BB066A9BE053100010AC7BDE",
                 "type":"NEW_VARIATION",
                 "additionalData":{  
                    "success":true
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                 }
              },
              {  
                 "token":"907EAE9BDFDCE292E053100010AC927C",
                 "type":"NEW_IMAGE",
                 "additionalData":{  
                    "success":true,
                    "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
                    "product":{  
                       "productGroupPartnerId":"14011992"
                    }
                 }
              }
           ],
           "page":{  
              "size":100,
              "totalElements":269,
              "totalPages":1,
              "number":1
           }
        }

+ Response 204   

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }
        
        
## Mark as read notification [/rest/feed/v1/{token}]

+ Attributes (object)
    + exception (Exception)

### Mark as read notification [PUT]
Mark as read a notification.

+ Parameters
    + token (required, string, `45g65d4sdf5465sdf5`) ... Token


+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausMandatoryArgumentException",
            "message": "''${attribute or argument}'' arguments are mandatories.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
            "exceptionTypeName": "PosthausNotificationNotFoundException",
            "message": "Notification token ''${attribute or argument}'' not found.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausNotificationAlreadyReadException",
            "message": "Notification token ''${attribute or argument}'' is already read.",
            "attOrArgName": "${attribute or argument}"
        }


## Reverse Logistic Notification [/rest/feed/logistic/reverse/authorization/v1{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `10`
        
+ Attributes (object)
    + notifications (NotificationsReverseLogistic)
    + page (Page)    
    
### Reverse Logistic Notification [GET]
Return list of reverse logistic notification from seller. An list with all
notification not read/expiration of Posthaus Marketplace.

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
            "notifications": [
                {
                    "token": "45g65d4sdf5465sdf5",
                    "type": "LOGISTIC_REVERSE_AUTHORIZATION",
                    "additionalData": {
                        "reverseId": 45687920
                    }
                },
                {
                    "token": "45g65d4sdf5465s45rs",
                    "type": "LOGISTIC_REVERSE_AUTHORIZATION",
                    "additionalData": {
                        "reverseId": 45687921
                    }
                },
                {
                    "token": "45g65d4sdf5465shyt",
                    "type": "LOGISTIC_REVERSE_AUTHORIZATION",
                    "additionalData": {
                        "reverseId": 45687922
                    }
                }
            ],
            "page": {
                "size": 3,
                "totalElements": 3,
                "totalPages": 1,
                "number": 1
            }
        }

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

# Group Order
It will be used to read information about Orders in Posthaus.

## Order by id [/rest/orders/v1/{order_id}]

+ Parameters
    + order_id (required, number, `999558695`) ... Order ID generated by Posthaus

+ Attributes (object)
    + order (OrderGet)
    + exception (Exception)    

### Read a Order [GET]
Returns the Order details by Order number.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "DELIVERED",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "invoices": [
            {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z",
                "value": 166.89
            }
          ],
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ],
          "tracking": {
            "url": "http://websro.correios.com.br/sro_bin",
            "number": "SP89598599",
            "carrier": "CORREIOS",
            "carrierDocument": "14317819000191",
            "deliveredDate": "2018-08-17T10:40:32Z",
            "estimateDate": "2018-08-15T10:40:32Z",
            "shippedDate": "2018-08-08T10:40:32Z"
          }
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }


### Update order status to Sent [PUT]
Updates Order status by Order number to Sent. Body parameter `status` defines the new Order status.
Changing to this situation requires the following information: Tracking URL, Tracking Number, Carrier Name and Ship Date.
The Estimate Date needs to be: after than Shipped Date and between 30 days backward and 30 days forward.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            {
                "status": "SENT",
                "tracking": {
                    "url": "http://websro.correios.com.br/sro_bin",
                    "number": "SP89598599",
                    "carrier": "CORREIOS",
                    "carrierDocument": "14317819000191",
                    "estimateDate": "2018-08-08T10:40:32Z",
                    "shippedDate": "2018-08-08T10:40:32Z"
              }
            }

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "SENT",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "invoices": [
            {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z",
                "value": 166.89
            }
          ],
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ],
          "tracking": {
            "url": "http://websro.correios.com.br/sro_bin",
            "number": "SP89598599",
            "carrier": "CORREIOS",
            "carrierDocument": "14317819000191",
            "estimateDate": "2018-08-15T10:40:32Z",
            "shippedDate": "2018-08-08T10:40:32Z"
          }
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidStatusException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidCancelReasonException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderTrackingNumberAlreadyExistsException",
        "message": "The order tracking number already exists(order_id: ''${attribute or argument}'', tracking_number: ''${tracking_number}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausInvoiceNotFoundException",
        "message": "Invoice does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidSentDateException",
        "message": "Estimated delivery date or delivery date must be greater than the orders invoice date (invalid_date: '' ${attribute or argument} '').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }

### Update order status to Delivered [PUT]
Updates Order status by Order number to Delivered. Body parameter `status` defines the new order status.
It is the last situation of the request. Changing to this situation it is necessary to inform: date of delivery.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            {
                "status": "DELIVERED",
                "tracking": {
                    "deliveredDate": "2018-08-08T10:40:32Z"
                }
            }
            

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "DELIVERED",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "invoices": [
            {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z",
                "value": 166.89
            }
          ],
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ],
          "tracking": {
            "url": "http://websro.correios.com.br/sro_bin",
            "number": "SP89598599",
            "carrier": "CORREIOS",
            "carrierDocument": "14317819000191",
            "deliveredDate": "2018-08-17T10:40:32Z",
            "estimateDate": "2018-08-15T10:40:32Z",
            "shippedDate": "2018-08-08T10:40:32Z"
          }
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidStatusException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

### Update order status to Canceled [PUT]
Updates order status by order number to Canceled. Body parameter `status` defines the new order status.
Attribute canceledReason values, STOCK_UNAVAILABLE, DELIVERY_UNAVAILABLE or DELIVERY_REFUSED.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  
    
            {
                "status": "CANCELED",
                "canceledReason": "DELIVERY_REFUSED"
            }

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "CANCELED",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "invoices": [
            {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z",
                "value": 166.89
            }
          ],
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ],
          "tracking": {
            "url": "http://websro.correios.com.br/sro_bin",
            "number": "SP89598599",
            "carrier": "CORREIOS",
            "carrierDocument": "14317819000191",
            "estimateDate": "2018-08-15T10:40:32Z",
            "shippedDate": "2018-08-08T10:40:32Z"
          }
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidStatusException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderAlreadyDeliveredException",
        "message": "The order already DELIVERED (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderAlreadyCancelException",
        "message": "Order already canceled (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidCancelReasonException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderNotInvoicedException",
        "message": "Order needs to be invoiced (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausSendEmailException",
        "message": "Can not find a valid email code to send seller cancellation email.",
        "attOrArgName": "${attribute or argument}"
        }

### Update order status to Invoiced [PUT]
Updates order status by order number to Invoiced. Body parameter `status` defines the new order status.
Changing to this situation is necessary to inform: note number, serial number, date of issue and access key.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            {
                "status": "INVOICED",
                "invoices": [
                    {
                        "accessKey": "NFe35080599999090910270550010000000015180051273",
                        "series": "1",
                        "number": "35",
                        "date": "2018-08-08T10:40:32Z",
                        "value": 166.89
                    }
                ]
            }

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "INVOICED",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "invoices": [
            {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z",
                "value": 166.89
            }
          ],
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ]
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidStatusException",
        "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderAlreadyInvoicedException",
        "message": "The order already INVOICED (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidDateException",
        "message": "Invoice date must be after order date.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }

### Update order status to Integrated [PUT]
Updates order status by order number to Integrated. Body parameter `status` defines the new order status.
Changing to this situation requires the following information: List of canceled items (can be empty).

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  
    
            {
                "status": "INTEGRATED",
                "partnerId": "959647497",
                "canceledSku": [
                    "4984877987",
                    "4984877981",
                    "4984877982"
                ]
            }

+ Response 200 (application/json)

        {
          "id": 41432946,
          "partnerId": "",
          "createdAt": "2018-08-08T10:40:32Z",
          "paymentDate": "2018-08-08T10:40:32Z",
          "status": "INTEGRATED",
          "discount": 2.90,
          "freight": 9.90,
          "freightCarrier": "CORREIOS",
          "freightEstimateDate": "2018-08-08T10:40:32Z",
          "shippingType": "NORMAL",
          "gross": 159.89,
          "total": 166.89,
          "shipping": {
            "city": "Blumenau",
            "state": "SC",
            "country": "Brasil",
            "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
            "number": "1069",
            "neighborhood": "Centro",
            "street": "Rua Sete de Setembro",
            "comment": "Sala 10A - Edifício Dumóvel",
            "zipCode": "89010207",
            "receiverName": "João",
            "promisedShippingTime": "2018-08-08T10:40:32Z"
          },
          "buyer": {
            "name": "João",
            "document": "56786132006",
            "documentType": "CPF",
            "dddPhone": 47,
            "phone": 33385566,
            "dddCellPhone": 47,
            "cellPhone": 988995566
          },
          "payments": {
              "method": {
                "id": 0,
                "description": "CREDIT CARD"
              },
              "value": 166.89,
              "installments": 2,
              "marketplaceFee": 5.0
          },
          "items": [
            {
              "product": {
                "id": 5263430,
                "title": "Tênis da Moda Cinza"
              },
              "simpleSku": {
                "id": 5263430M,
                "title": "Tênis da Moda Cinza",
                "partnerId": "6000641446"
              },
              "amount": 1,
              "unit": 69.90,
              "gross": 69.90,
              "total": 67.91,
              "discount": 1.99,
              "orderItemId": "1"
            },
            {
              "product": {
                "id": 1830320,
                "title": "Sapato Peep Toe Listrado"
              },
              "simpleSku": {
                "id": 183032039,
                "title": "Sapato Peep Toe Listrado",
                "partnerId": "4968641446",
              },
              "amount": 2,
              "unit": 45.99,
              "gross": 91.98,
              "total": 91.98,
              "discount": 0,
              "orderItemId": "2"
            }
          ]
        }

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }
        

+ Response 404 (application/json)

        {
            "exceptionTypeName": "PosthausSellerOrderNotFoundException",
            "message": "Order does not exist (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausOrderInvalidStatusException",
            "message": "Integration of the Order already marked ${order_status} (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }
        
+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausOrderAlreadyDeliveredException",
            "message": "The order already DELIVERED (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }
        
+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausSkuItemInvalidException",
            "message": "Sku (''${attribute or argument}'') informed is not valid for the Order. (order_id: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }
        
+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausOrderAlreadyIntegratedException",
            "message": "PartnerId: '' ${attribute or argument} '' already integrated for another Order.",
            "attOrArgName": "${attribute or argument}"
        }
        
+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderAlreadyCancelException",
        "message": "Order already canceled (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }
        
+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }
        
+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }
        
+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' ('${value}').",
        "attOrArgName": "${attribute or argument}"
        }
        
+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausItemAlreadyCancelException",
            "message": "Item already canceled (item: ''${attribute or argument}'' order_id: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }

### Send XML NF-e [PUT /rest/orders/v1/{order_id}/nfe]
Send the XMl from NF-e to the Marketplace. Only XML content should be sent.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            <NFe xmlns="http://www.portalfiscal.inf.br/nfe">
                <infNFe Id="NFe35080599999090910270550010000000015180051273" versao="1.10">
                    <ide>
                        <cUF>35</cUF>
                        <cNF>518005127</cNF>
                        <natOp>Venda a vista</natOp>
                        <indPag>0</indPag>
                        <mod>55</mod>
                        <serie>1</serie>
                        <nNF>1</nNF>
                        <dEmi>2008-05-06</dEmi>
                        <dSaiEnt>2008-05-06</dSaiEnt>
                        <tpNF>0</tpNF>
                        <cMunFG>3550308</cMunFG>
                        <tpImp>1</tpImp>
                        <tpEmis>1</tpEmis>
                        <cDV>3</cDV>
                        <tpAmb>2</tpAmb>
                        <finNFe>1</finNFe>
                        <procEmi>0</procEmi>
                        <verProc>NF-eletronica.com</verProc>
                    </ide>
                </infNFe>
            </NFe>

+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSellerOrderNotFoundException",
        "message": "Order does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausOrderInvalidStatusException",
        "message": "The order (order_id: ''${attribute or argument}'') is not INVOICED yet.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausOrderAlreadyCancelException",
        "message": "Order already canceled (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausInvoiceAlreadyPersistedException",
        "message": "Invoice has already been persisted (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausInvoiceNotFoundException",
        "message": "Invoice does not exist (order_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }


## Orders [/rest/orders/v1{?page,limit,createdAfter,status,cpf}]
Returns the order details using the filters: createdAfter, status and customer CPF. 

+ Parameters
    + createdAfter (required, string, `2018-08-08T10:40:32Z`) ... Order creation date
    + status (optional, string) ... Order status
    + cpf (optional, string) ... Document number - CPF
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (optional, number)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `100`

+ Attributes (object)
    + order (OrderGet)
    + page (Page)
    + exception (Exception)    


### Read list Orders [GET]
Returns the order details.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
            "content": [
                {
                  "id": 41432946,
                  "partnerId": "",
                  "createdAt": "2018-08-08T10:40:32Z",
                  "paymentDate": "2018-08-08T10:40:32Z",
                  "status": "PENDING",
                  "discount": 2.90,
                  "freight": 9.90,
                  "freightCarrier": "CORREIOS",
                  "freightEstimateDate": "2018-08-08T10:40:32Z",
                  "shippingType": "NORMAL",
                  "gross": 159.89,
                  "total": 166.89,
                  "invoices": [
                    {
                        "accessKey": "NFe35080599999090910270550010000000015180051273",
                        "series": "1",
                        "number": "35",
                        "date": "2018-08-08T10:40:32Z",
                        "value": 166.89
                    }
                  ],
                  "shipping": {
                    "city": "Blumenau",
                    "state": "SC",
                    "country": "Brasil",
                    "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
                    "number": "1069",
                    "neighborhood": "Centro",
                    "street": "Rua Sete de Setembro",
                    "comment": "Sala 10A - Edifício Dumóvel",
                    "zipCode": "89010207",
                    "receiverName": "João",
                    "promisedShippingTime": "2018-08-08T10:40:32Z"
                  },
                  "buyer": {
                    "name": "João",
                    "document": "56786132006",
                    "documentType": "CPF",
                    "dddPhone": 47,
                    "phone": 33385566,
                    "dddCellPhone": 47,
                    "cellPhone": 988995566
                  },
                  "payments": {
                      "method": {
                        "id": 0,
                        "description": "CREDIT CARD"
                      },
                      "value": 166.89,
                      "installments": 2,
                      "marketplaceFee": 5.0
                  },
                  "items": [
                    {
                      "product": {
                        "id": 5263430,
                        "title": "Tênis da Moda Cinza"
                      },
                      "simpleSku": {
                        "id": 5263430M,
                        "title": "Tênis da Moda Cinza",
                        "partnerId": "6000641446"
                      },
                      "amount": 1,
                      "unit": 69.90,
                      "gross": 69.90,
                      "total": 67.91,
                      "discount": 1.99,
                      "orderItemId": "1"
                    },
                    {
                      "product": {
                        "id": 1830320,
                        "title": "Sapato Peep Toe Listrado"
                      },
                      "simpleSku": {
                        "id": 183032039,
                        "title": "Sapato Peep Toe Listrado",
                        "partnerId": "4968641446",
                      },
                      "amount": 2,
                      "unit": 45.99,
                      "gross": 91.98,
                      "total": 91.98,
                      "discount": 0,
                      "orderItemId": "2"
                    }
                  ],
                  "tracking": {
                    "url": "http://websro.correios.com.br/sro_bin",
                    "number": "SP89598599",
                    "carrier": "CORREIOS",
                    "carrierDocument": "14317819000191",
                    "deliveredDate": "2018-08-17T10:40:32Z",
                    "estimateDate": "2018-08-15T10:40:32Z",
                    "shippedDate": "2018-08-08T10:40:32Z"
                  }
                }
            ],
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
          }
        }
+ Response 204   

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidAttributeValueException",
        "message": "Invalid value informed at ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
        "message": "''${attribute or argument}'' argument is mandatory and greater than ''${value}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidDateException",
        "message": "Invalid date ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

## Cancel Order Items [/rest/orders/v1/{order_id}/cancelation/]
It will be used to requests the cancellation of items of a Order created by Posthaus.
This trigger will to make items in the marketplace unavailable.

The body POST is a seller canceled sku id list.

+ Attributes (object)
    + exception (Exception)

+ Parameters
    + order_id (required, number, `999558695`) ... Order ID generated by Posthaus

### Cancellation of items [POST]
Requests the cancellation of items of a Order.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            [
                "4984877987",
                "4984877981",
                "4984877982"
            ]

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausMandatoryArgumentException",
            "message": "''${attribute or argument}'' argument is mandatory.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausInvalidAttributeValueException",
            "message": "Invalid value informed at ''${attribute or argument}''.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausOrderAlreadyDeliveredException",
            "message": "Order already delivered (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausSendEmailException",
            "message": "Can not find a valid email code to send seller cancellation email.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
            "exceptionTypeName": "PosthausSellerOrderNotFoundException",
            "message": "Order does not exist (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausOrderAlreadyCancelException",
            "message": "Order already canceled (order_id: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
            "exceptionTypeName": "PosthausItemNotFoundException",
            "message": "Item not found for Order (item: ''${attribute or argument}'' order_id: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausItemAlreadyCancelException",
            "message": "Item already canceled (item: ''${attribute or argument}'' order_id: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }


# Group Price
It will be used to perform price update.
The price operation is performed in batch, it is possible to send one or more prices to update.

## Prices [/rest/prices/v1/]

+ Attributes (object)
    + skus (array[SkuPrice])
    + exception (Exception)    

### Update prices [PUT]
In prices update service we have synchronous and asynchronous process. 
First of all, when the PUT is received, the synchronous execution starting, at this time some validations are executed, 
if in this process has some inconsistence, it is going to return one or a list of exceptions (inconsistences), 
otherwise execution will proceed to the next step, the asynchronous process. 
At asynchronous process we have some other validations (more criticals validations), if the price has any inconsistence, 
it is going to publish a faults notification, other wise, a success notification.

You must read the notifications requesting service GET /rest/feed/price/

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body            

            [
                {
                    "partnerId": "8959860",
                    "price": 199.98,
                    "sellPrice": 129.98
                },
                {
                    "partnerId": "8959861",
                    "price": 179.98,
                    "sellPrice": 119.98
                },
                {
                    "partnerId": "8959862",
                    "price": 189.98,
                    "sellPrice": 129.98
                }
            ]

+ Response 200 (application/json)

        {
            "updatePriceID": "1f94f503-84b4-484b-bf3c-d9a329a67908",
            "message": "Price SKU Update List is going to be updated asynchronously."
        }

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausMandatoryArgumentException",
            "message": "''${attribute or argument}'' argument is mandatory.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausEmptyArrayException",
            "message": "Array ''${attribute or argument}'' is empty.",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausTooLargerAttributeValueException",
            "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
            "message": "''{${attribute or argument}}'' attribute is mandatory and greater than ''${value1}'' (${value2}: ''${value3}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
            "message": "Json request body is mandatory.",
            "attOrArgName": "${attribute or argument}"
        }


# Group Product

## Brands [/rest/brands/v1/{?page,limit}]

It will be used to read Brands in Maketplace Posthaus.

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + categories (array[BrandResponse])
    + exception (Exception)
    + page (Page)

### Read Brands [GET]
Returns all brands recorded.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

        {
            "brands": [
                {
                    "id": 1234,
                    "name": "Marca exemplo"
                },
                {
                    "id": 889,
                    "name": "Teste"
                }
            ],
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
        }

+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

## Categories [/rest/categories/v1/{?page,limit}]
It will be used to read Categories registered in Maketplace Posthaus.
The list of categories also presents the attributes of the product / variation / sku that are optional, 
in this way, it is known in which conditions or the registration will be more flexible.
+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + categories (array[ReadCategory])
    + exception (Exception)
    + page (Page)


### Read Categories [GET]
Returns the registered Marketplace categories.

+ Request (application/json)
    + Headers
    
            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

        {
            "categories": [
                {
                    "id": 1,
                    "name": "Moda Feminina",
                    "subCategory": {
                        "id": 10,
                        "name": "Vestidos"
                    },
                    "subClass": {
                        "id": 1,
                        "name": "Vestido Curto"
                    },
                    "productCustomFields": {
                        "optionalFields": [],
                        "variationCustomFields": {
                            "optionalFields": [
                                "predominantColor"
                            ],
                            "skuCustomFields": {
                                "optionalFields": []
                            }
                        }
                    }
                }
            ],
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
        }

+ Response 204   

+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

## Product [/rest/products/v1/]

+ Attributes (object)
    + product (FullProduct)
    
    + exception (Exception)


### Create a Product [POST]
In product creation service we have synchronous and asynchronous process. 
First of all, when the POST is received, the synchronous execution starting, at this time some validations are executed, 
if the product has some inconsistence, it is going to return a list of exceptions (inconsistences), otherwise the product is going to go to next step, 
the asynchronous process. At asynchronous process we have some other validations (more criticals validations), 
if the product has any inconsistence, it is going to publish a faults notification, other wise, a success notification.

In the asynchronous process, the predominant color is validated according to what is parameterized for the product category, subcategory and subclass.

You must read the notifications requesting service GET /rest/feed/product/

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body         

            {  
               "productGroupPartnerId":"15032019",
               "brand":{  
                  "partnerId":"TR6757"
               },
               "title":"Vestido Longo",
               "description":"Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
               "gender":"F",
               "ageGroup":"A",
               "variations":[  
                  {  
                     "productPartnerId":"60022019",
                     "title":"Cafe",
                     "predominantColor":{  
                        "id":"Marrom",
                        "partnerId":"964B00"
                     },
                     "skus":[  
                        {  
                           "partnerId":"85022019",
                           "ean":"30",
                           "price":169.90,
                           "sellPrice":159.90,
                           "size":{  
                              "partnerId":"95",
                              "id":"G"
                           },
                           "amount":10,
                           "height":30,
                           "width":30,
                           "length":30,
                           "weight":32
                        },
                        {  
                           "partnerId":"86022019",
                           "ean":"31",
                           "price":169.90,
                           "sellPrice":159.90,
                           "size":{  
                              "partnerId":"96",
                              "id":"M"
                           },
                           "amount":10,
                           "height":30,
                           "width":30,
                           "length":30,
                           "weight":32
                        }
                     ],
                     "images":[  
                        {  
                           "index":1,
                           "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_02.jpg"
                        },
                        {  
                           "index":2,
                           "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_03.jpg"
                        }
                     ]
                  },
                  {  
                     "productPartnerId":"61022019",
                     "title":"Canela",
                     "predominantColor":{  
                        "id":"Marrom",
                        "partnerId":"964B00"
                     },
                     "skus":[  
                        {  
                           "partnerId":"87022019",
                           "ean":"32",
                           "price":169.90,
                           "sellPrice":159.90,
                           "size":{  
                              "partnerId":"95",
                              "id":"G"
                           },
                           "amount":10,
                           "height":30,
                           "width":30,
                           "length":30,
                           "weight":32
                        },
                        {  
                           "partnerId":"88022019",
                           "ean":"33",
                           "price":169.90,
                           "sellPrice":159.90,
                           "size":{  
                              "partnerId":"96",
                              "id":"M"
                           },
                           "amount":10,
                           "height":30,
                           "width":30,
                           "length":30,
                           "weight":32
                        }
                     ],
                     "images":[  
                        {  
                           "index":1,
                           "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_02.jpg"
                        },
                        {  
                           "index":2,
                           "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_03.jpg"
                        }
                     ]
                  }
               ],
               "collection":"Inverno 2020",
               "characteristics":[  
                  {  
                     "name":"Medida ombro",
                     "value":"32cm"
                  }
               ],
               "category":{  
                  "partnerId":"1",
                  "subCategory":{  
                     "partnerId":"10"
                  },
                  "subClass":{  
                     "partnerId":"1"
                  }
               }
            }


+ Response 200 (application/json)

        {   
            "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
            "productGroupPartnerId": "489764",
            "message": "The product is going to be created asynchronously."
        }
        
+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausProductPartnerIdAlreadyExistsException",
        "message": "Product already exists (productPartnerId: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausImageIndexAlreadyExistsException",
        "message": "Image index already exists in JSON.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptions": [
                {
                "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
                "message": "Json request body is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausTooSmallAttributeValueException",
                "message": "Too small attribute value for ''${attribute or argument}''.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausEmptyArrayException",
                "message": "Array ''${attribute or argument}'' is empty.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuPartnerIdAlreadyExistsException",
                "message": "Sku partnerId already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuBarcodeAlreadyExistsException",
                "message": "Sku barcode already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuSizeAlreadyExistsException",
                "message": "Sku size already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryAttributeException",
                "message": "''${attribute or argument}'' attribute is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausTooLargerAttributeValueException",
                "message": "Too larger attribute value for ''{${attribute or argument}}'' (''${value}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryArgumentException",
                "message": "''${attribute or argument}'' argument is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
                "message": "''${attribute or argument}'' attribute is mandatory and greater than ''${value1}'' (${vallue2}: ''${value3}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausImageAlreadyExistsException",
                "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkusIdAlreadyExistsException",
                "message": "Skus already exists(skus: ''${attribute or argument}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausGenderValidationException",
                "message": "Skus already exists(skus: ''${attribute or argument}'').",
                "attOrArgName": "${attribute or argument}"
                }
            ]
            ]
        }        
        
        
## Products [/rest/products/v1/{?page,limit}]

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + products (array[ReadFullProduct])
    + exception (Exception)

### Read Products [GET]
It will be used to read information about Products in Posthaus. Returns the products details.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
+ Response 200 (application/json)

        [
            {
                "productGroupId": "313503",
                "productGroupPartnerId": "489764",
                "brand": {
                  "id": 1234,
                  "partnerId": "TR6757"
                },
                "title": "VESTIDO DE TRICÔ OMBRO A OMBRO",
                "description": "Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
                "gender": "F",
                "ageGroup": "A",
                "variations":[  
                    {  
                      "productPartnerId": "6000641446",
                      "title": "Café",
                      "predominantColor": {
                        "id": "Marrom",
                        "partnerId": "964B00"
                      },
                      "skus": [
                        {
                            "partnerId": "489764987",
                            "ean": "7898357417892",
                            "amount": 354,
                            "price": 169.90,
                            "sellPrice": 159.90,
                            "size": {
                                "id": "M",
                                "partnerId":"M3"
                            },
                          "height":30.15,
                          "width":45.15,
                          "length":10.15,
                          "weight":0.321
                        },
                        {
                            "partnerId": "489764988",
                            "ean": "7898357417982",
                            "amount": 354,
                            "price": 169.90,
                            "sellPrice": 159.90,
                            "size": {
                                "id": "M",
                                "partnerId":"M3"
                            },
                            "height":30.15,
                            "width":45.15,
                            "length":10.15,
                            "weight":0.321
                        }
                      ],
                      "images": [
                          {
                            "id": 78949764,
                            "index": 1,
                            "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                            "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_1.jpg"
                          },
                          {
                            "id": 78949765,
                            "index": 2,
                            "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                            "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_2.jpg"
                          },
                          {
                            "id": 78949766,
                            "index": 3,
                            "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                            "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_3.jpg"
                          }              
                        ]
                    }
                ],
                "collection": "Inverno 2020",
                "characteristics": [
                  {
                    "name": "Medida ombro",
                    "value": "32cm"
                  },
                  {  
                     "name":"Composição",
                     "value":"Sintético"
                  }               
                ],
               "category":{  
                  "partnerId":"1",
                  "subCategory":{  
                     "partnerId":"10"
                  },
                  "subClass":{  
                     "partnerId":"1"
                  }
               }
            }
        ]    

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }

## Product by id [/rest/products/v1/{product_group_partner_id}/]
+ Attributes (object)
    + product (ReadFullProduct)

### Read a Product [GET]
Returns the informations about a specific product.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
+ Response 200 (application/json)

          {
            "productGroupId": "313503",
            "productGroupPartnerId": "489764",
            "brand": {
              "id": 1234,
              "partnerId": "TR6757"
            },
            "title": "VESTIDO DE TRICÔ OMBRO A OMBRO",
            "description": "Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
            "gender": "F",
            "ageGroup": "A",
            "variations":[  
                {
                  "productPartnerId": "6000641446",
                  "title": "Café",
                  "predominantColor": {
                    "id": "Marrom",
                    "partnerId": "964B00"
                  },
                  "skus": [
                    {
                        "partnerId": "489764987",
                        "ean": "7898357417892",
                        "amount": 354,
                        "price": 169.90,
                        "sellPrice": 159.90,
                        "size": {
                            "id": "M",
                            "partnerId":"M3"
                        },
                        "height": 30.00,
                        "width": 45.00,
                        "length": 10.00,
                        "weight": 0.320
                    },
                    {
                        "partnerId": "489764988",
                        "ean": "7898357417982",
                        "amount": 354,
                        "price": 169.90,
                        "sellPrice": 159.90,
                        "size": {
                            "id": "M",
                            "partnerId":"M3"
                        },
                        "height": 30.00,
                        "width": 45.00,
                        "length": 10.00,
                        "weight": 0.320
                    }
                  ],
                  "images": [
                      {
                        "id": 78949764,
                        "index": 1,
                        "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                        "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_1.jpg"
                      },
                      {
                        "id": 78949765,
                        "index": 2,
                        "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                        "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_2.jpg"
                      },
                      {
                        "id": 78949766,
                        "index": 3,
                        "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                        "standardUrl": "https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_3.jpg"
                      }              
                    ]
                }
            ],
            "collection": "Inverno 2020",
            "characteristics": [
              {
                "name": "Medida ombro",
                "value": "32cm"
              },
              {  
                 "name":"Composição",
                 "value":"Sintético"
              }               
            ],
            "category":{  
              "partnerId":"1",
              "subCategory":{  
                 "partnerId":"10"
              },
              "subClass":{  
                 "partnerId":"1"
              }
            }
          }

+ Response 500 (application/json)          

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }

### Update a Product [PUT]

Update some product attributes asynchronously.
Product attributes (like title, characteristics, category, etc) will be updated in all variations, even variations were not informed.

Product variations and skus can be omitted, if you do, no changes will occur to them properties. (attributes product.variations and product.variations.skus)
If you inform variations or skus attributes, all its informations should be informed on update, even when no changes on it. You should inform the complete object.

In the asynchronous process, the predominant color is validated according to what is parameterized for the product category, subcategory and subclass.

Product brand attribute is going not be updated.

The product images, prices and stock attributes don't updated at this service and will be ignored if informed. 
These changes should be update at this services:

- Product Images Services (#reference/product/product-images).
- Product Price Services (#reference/price/prices).
- Product Stock Services (#reference/stock/stocks).


The product characteristics always will be replaced with the characteristics informed. 
If you want to add new characteristics, inform the current and the new ones you want to add.
If you want to remove characteristics, inform the current without the ones you want to remove.




+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body         

            {
                "productGroupPartnerId":"489764",
                "title":"VESTIDO DE TRICÔ OMBRO A OMBRO",
                "description":"Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
                "gender":"F",
                "ageGroup":"A",
                "variations":[{  
                    "productPartnerId":"6000641446",
                    "title":"Café",
                    "predominantColor":{  
                        "partnerId":"964B00"
                    },
                    "skus":[{  
                        "partnerId":"489764987",
                        "height":30.15,
                        "width":45.15,
                        "length":10.15,
                        "weight":0.321
                    },{  
                        "partnerId":"489764988",
                        "height":30.15,
                        "width":45.15,
                        "length":10.15,
                        "weight":0.3
                    }]
                },{
                    "productPartnerId":"60006411231",
                    "title":"Café",
                    "predominantColor":{  
                        "partnerId":"964B00"
                    },
                    "skus":[{  
                        "partnerId":"489764123",
                        "height":30.15,
                        "width":45.15,
                        "length":10.15,
                        "weight":0.321
                    },{  
                        "partnerId":"4823121231",
                        "height":30.15,
                        "width":45.15,
                        "length":10.15,
                        "weight":0.325
                    }]
                }],
                "collection":"Inverno 2030",
                "characteristics":[{  
                    "name":"Medida ombro",
                    "value":"32cm"
                },{  
                    "name":"Composição",
                    "value":"Sintético"
                }],
                "category":{  
                  "partnerId":"1",
                  "subCategory":{  
                     "partnerId":"10"
                  },
                  "subClass":{  
                     "partnerId":"1"
                  }
               }
            }


+ Response 200 (application/json)

        {
            "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
            "productGroupPartnerId": "489764",
            "message": "The product is going to be updated asynchronously."
        }
        
+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }

+ Response 500 (application/json)

        { 
           "exceptions":[ 
              { 
                 "exceptionTypeName":"",
                 "message":""
              },
              { 
                 "exceptionTypeName":"",
                 "message":""
              }
           ]
        } 

## Product Status [/rest/products/status/v1/{product_group_partner_id}/]

+ Attributes (object)
    + productStatus (ProductStatus)

### Read a Product Status [GET]
The product status service is the service responsible for obtaining the current product status from the Posthaus database. 
This is illustrated at the three product levels (PRODUCT, VARIATION, and SKU) using the following statuses (SUCCESS or CONTAINS_FAULTS) 
or ERROR that is valid at the PRODUCT level only). In addition, at the VARIATION level, there is a posting status on the Posthaus site with SUCCESS status for published or PENDING for unpublished.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJhbGciOiJIUzUxMiJ9.eyJqdGkiOiJlODIwYzA1ZC0wMWNhLTQ3OGUtOWZkMS0wYjdkZWEwZDcyZDUiLCJpYXQiOjE1NDM1ODU2MjcsInN1YiI6IjI0IiwiaXNzIjoiMTIiLCJhdWQiOiIke3Zhci5hdWRpZW5jZX0ifQ.VNPfjMs4GQH5cYc7Y0IiaNvhBSJlZh2DBqwSE8sVO76F4TJas4_TbzWf5Duzwfo8nD17fa5twHAeKTGMwhJNcg
            
+ Response 200 (application/json)

        { 
           "productGroupPartnerId":"1048760228116",
           "faults":[ 
              { 
                 "exceptionTypeName":"PosthausProductCategoryNotFoundException",
                 "message":"Product category not found (partnerId: '900').",
                 "attOrArgName":"category.subClass.partnerId"
              },
              { 
                 "exceptionTypeName":"PosthausProductCategoryNotFoundException",
                 "message":"Product category not found (partnerId: '4').",
                 "attOrArgName":"category.subCategory.partnerId"
              },
              { 
                 "exceptionTypeName":"PosthausProductCategoryNotFoundException",
                 "message":"Product category not found (partnerId: '1').",
                 "attOrArgName":"category.partnerId"
              }
           ],
           "productStatus":"CONTAINS_FAULTS",
           "variation":[ 
              { 
                 "productPartnerId":"1048760228116A",
                 "variationStatus":"SUCCESS",
                 "publishStatus":"PENDING",
                 "skus":[ 
                    { 
                       "skuStatus":"SUCCESS",
                       "partnerId":"1048760228116AA"
                    }
                 ]
              },
              { 
                 "productPartnerId":"1048760228116B",
                 "variationStatus":"SUCCESS",
                 "publishStatus":"PENDING",
                 "skus":[ 
                    { 
                       "skuStatus":"SUCCESS",
                       "partnerId":"1048760228116BA"
                    },
                    { 
                       "skuStatus":"SUCCESS",
                       "partnerId":"1048760228116BC"
                    }
                 ]
              }
           ]
        }

+ Response 500 (application/json)          

        {
            "exceptionTypeName": "",
            "message": ""
        }
        
## Product Validate [/rest/products/validate/v1/]

+ Attributes (object)
    + product (FullProduct)
    + exception (Exception)
        
### Product Validate [POST]
Validates the product data without their persistence, this way it will be possible to validate the data before sending it to persistence, making the validation and persistence process in 2 steps. These validations will only be synchronous.

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body       

        {  
            "productGroupPartnerId":"15032019",
            "brand":{  
              "partnerId":"TR6757"
            },
            "title":"Vestido Longo",
            "description":"Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
            "gender":"F",
            "ageGroup":"A",
            "variations":[  
              {  
                 "productPartnerId":"60022019",
                 "title":"Cafe",
                 "predominantColor":{  
                    "id":"Marrom",
                    "partnerId":"964B00"
                 },
                 "skus":[  
                    {  
                       "partnerId":"85022019",
                       "ean":"30",
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "partnerId":"95",
                          "id":"G"
                       },
                       "amount":10,
                       "height":30,
                       "width":30,
                       "length":30,
                       "weight":32
                    },
                    {  
                       "partnerId":"86022019",
                       "ean":"31",
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "partnerId":"96",
                          "id":"M"
                       },
                       "amount":10,
                       "height":30,
                       "width":30,
                       "length":30,
                       "weight":32
                    }
                 ],
                 "images":[  
                    {  
                       "index":1,
                       "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_02.jpg"
                    },
                    {  
                       "index":2,
                       "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_03.jpg"
                    }
                 ]
              },
              {  
                 "productPartnerId":"61022019",
                 "title":"Canela",
                 "predominantColor":{  
                    "id":"Marrom",
                    "partnerId":"964B00"
                 },
                 "skus":[  
                    {  
                       "partnerId":"87022019",
                       "ean":"32",
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "partnerId":"95",
                          "id":"G"
                       },
                       "amount":10,
                       "height":30,
                       "width":30,
                       "length":30,
                       "weight":32
                    },
                    {  
                       "partnerId":"88022019",
                       "ean":"33",
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "partnerId":"96",
                          "id":"M"
                       },
                       "amount":10,
                       "height":30,
                       "width":30,
                       "length":30,
                       "weight":32
                    }
                 ],
                 "images":[  
                    {  
                       "index":1,
                       "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_02.jpg"
                    },
                    {  
                       "index":2,
                       "url":"https://ph-cdn1.ecosweb.com.br/Web/posthaus/fotos/api_marketplace_tests/imagem_03.jpg"
                    }
                 ]
              }
            ],
            "collection":"Inverno 2020",
            "characteristics":[  
              {  
                 "name":"Medida ombro",
                 "value":"32cm"
              }
            ],
            "category":{  
                "partnerId":"1",
                "subCategory":{  
                 "partnerId":"10"
                },
                "subClass":{  
                 "partnerId":"1"
                }
            }
        }

+ Response 204 (application/json)

+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }
        
+ Response 500 (application/json)

        { 
           "exceptions":[ 
              { 
                 "exceptionTypeName":"",
                 "message":""
              },
              { 
                 "exceptionTypeName":"",
                 "message":""
              }
           ]
        }
        
# Group Variations
It will be used to get and create varitions in products

## Colors [/rest/colors/v1/{?page,limit}]
It will be used to read all product colors in Maketplace Posthaus.

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + colors (array[PredominantColor])
    + exception (Exception)
    + page (Page)


### Read Color [GET]
Returns all product colors available.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

        {
            "colors": [
                {
                    "id": "Preto",
                    "name": "Preto"
                },
                {
                    "id": "Marrom",
                    "name": "Marrom"
                },
                {
                    "id": "Amarelo",
                    "name": "Amarelo"
                }
            ],
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
        }
    
+ Response 204
    
+ Response 500 (application/json)

        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

## Variation [/rest/products/v1/{product_group_partner_id}/variations/]

+ Parameters
    + product_group_partner_id (required, string, `9995586`) ... product group partner ID

+ Attributes (object)

    + variation (FullVariation)
    
    + exception (Exception)


### Create a Variation [POST]
In variation creation service we have synchronous and asynchronous process. 
First of all, when the POST is received, the synchronous execution starting, at this time some validations are executed, 
if in this process has some inconsistence, it is going to return a list of exceptions (inconsistences), 
otherwise execution will proceed to the next step, the asynchronous process. 
At asynchronous process we have some other validations (more criticals validations), if the variation has any inconsistence, 
it is going to publish a faults notification, other wise, a success notification.

In the asynchronous process, the predominant color is validated according to what is parameterized for the product category, subcategory and subclass.

You must read the notifications requesting service GET /rest/feed/product/ 

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body         

                  {  
                     "productPartnerId":"6000641446",
                     "title":"Café",
                     "predominantColor":{  
                        "id": "Marrom",
                        "partnerId": "964B00"
                     },
                     "skus":[
                        {  
                           "partnerId":"489764988",
                           "ean":"7898357417982",
                           "amount": 354,
                           "price":169.90,
                           "sellPrice":159.90,
                           "size": {
                                "partnerId": "96",
                                "id": "M"
                            },
                           "height":30.15,
                           "width":45.15,
                           "length":10.15,
                           "weight":0.325
                        }
                     ],
                     "images":[  
                        {  
                           "index":1,
                           "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124341.jpg"
                        },
                        {  
                           "index":2,
                           "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg"
                        },
                        {  
                           "index":3,
                           "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124343.jpg"
                        }
                     ]
                  }

+ Response 200 (application/json)

        {
            "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
            "productGroupPartnerId": "{product_group_partner_id}",
            "message": "The variation is going to be created asynchronously."
        }
        
+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausProductPartnerIdAlreadyExistsException",
        "message": "Product already exists (productPartnerId: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausImageIndexAlreadyExistsException",
        "message": "Image index already exists in JSON.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptions": [
                {
                "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
                "message": "Json request body is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausTooSmallAttributeValueException",
                "message": "Too small attribute value for ''${attribute or argument}''.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausEmptyArrayException",
                "message": "Array ''${attribute or argument}'' is empty.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuPartnerIdAlreadyExistsException",
                "message": "Sku partnerId already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuBarcodeAlreadyExistsException",
                "message": "Sku barcode already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkuSizeAlreadyExistsException",
                "message": "Sku size already exists in JSON.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryAttributeException",
                "message": "''${attribute or argument}'' attribute is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausTooLargerAttributeValueException",
                "message": "Too larger attribute value for ''{${attribute or argument}}'' (''${value}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryArgumentException",
                "message": "''${attribute or argument}'' argument is mandatory.",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
                "message": "''${attribute or argument}'' attribute is mandatory and greater than ''${value1}'' (${vallue2}: ''${value3}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausImageAlreadyExistsException",
                "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
                "attOrArgName": "${attribute or argument}"
                },
                {
                "exceptionTypeName": "PosthausSkusIdAlreadyExistsException",
                "message": "Skus already exists(skus: ''${attribute or argument}'').",
                "attOrArgName": "${attribute or argument}"
                }
            ]
        }
        
## Variation by id [/rest/products/variations/v1/{product_partner_id}/]
    
    
### Read a Variation [GET]
GET a Variation.

+ Parameters
    
    + product_partner_id (required, string, `9995586`) ... Patner product ID

+ Request (application/json)



    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
    

+ Response 200 (application/json)

        {  
           "productGroupId":"313503",
           "productGroupPartnerId":"489764",
           "brand":{  
              "id":1234,
              "partnerId":"TR6757"
           },
           "title":"VESTIDO DE TRICÔ OMBRO A OMBRO",
           "description":"Vestido com decote ombro a ombro. Confeccionado em malha de tricô de algodão. Com mangas raglan e comprimento alongado.",
           "gender":"F",
           "ageGroup":"A",
           "variations":[  
              {  
                 "productPartnerId":"6000641446",
                 "title":"Café",
                 "predominantColor":{  
                    "id":"Marrom",
                    "partnerId":"964B00"
                 },
                 "skus":[  
                    {  
                       "partnerId":"489764987",
                       "ean":"7898357417892",
                       "amount":354,
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "id":"M",
                          "partnerId":"M3"
                       },
                       "height":30.00,
                       "width":45.00,
                       "length":10.00,
                       "weight":0.320
                    },
                    {  
                       "partnerId":"489764988",
                       "ean":"7898357417982",
                       "amount":354,
                       "price":169.90,
                       "sellPrice":159.90,
                       "size":{  
                          "id":"M",
                          "partnerId":"M3"
                       },
                       "height":30.00,
                       "width":45.00,
                       "length":10.00,
                       "weight":0.320
                    }
                 ],
                 "images":[  
                    {  
                       "id":78949764,
                       "index":1,
                       "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                       "standardUrl":"https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_1.jpg"
                    },
                    {  
                       "id":78949765,
                       "index":2,
                       "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                       "standardUrl":"https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_2.jpg"
                    },
                    {  
                       "id":78949766,
                       "index":3,
                       "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
                       "standardUrl":"https://ph-cdn3.ecosweb.com.br/Web/posthaus/foto/moda-feminina/vestidos/vestido-preto-com-decote-transpassado_124341_600_3.jpg"
                    }
                 ]
              }
            ],
           "collection":"Inverno 2020",
           "characteristics":[  
              {  
                 "name":"Medida ombro",
                 "value":"32cm"
              },
              {  
                 "name":"Composição",
                 "value":"Sintético"
              }
           ],
           "category":{  
              "partnerId":"1",
              "subCategory":{  
                 "partnerId":"10"
              },
              "subClass":{  
                 "partnerId":"1"
              }
           }
        }
        

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausVariationNotFoundException",
        "message": "Variation not found (product_partner_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

## Product Images [/rest/products/variations/v1/{product_partner_id}/images/]
It will be used to manage product images that will be processed by Posthaus.
The image file must be the minimum 390 height, 390 width and 5 MB the maximum upload file.
Format supported : JPEG.

+ Parameters
    + product_partner_id (required, string, `9995586`) ... Patner product ID

+ Attributes (object)
    + images (Image)
    + exception (Exception)   

### Publish new images [POST]
Deprecated

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            [
                  {
                    "index": 1,
                    "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124341.jpg"
                  },
                  {
                    "index": 2,
                    "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg"
                  },
                  {
                    "index": 3,
                    "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124343.jpg"
                  }              
            ]   
            


+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }
        
        
+ Response 200 (application/json)    

        {
            "eventId": "168103d7-9664-4131-bad9-1b29213afdc4",
            "message": "The image is going to be created asynchronously."
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausImageAlreadyExistsException",
            "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptions": [
                    {
                    "exceptionTypeName": "PosthausMandatoryArgumentException",
                    "message": "''${attribute or argument}'' argument is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausTooLargerAttributeValueException",
                    "message": "Too larger attribute value for ''{${attribute or argument}}'' (''${value}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausEmptyArrayException",
                    "message": "Array ''${attribute or argument}'' is empty.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryArgumentException",
                    "message": "''${attribute or argument}'' argument is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
                    "message": "''${attribute or argument}'' attribute is mandatory and greater than ''${value1}'' (${vallue2}: ''${value3}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausImageAlreadyExistsException",
                    "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryAttributeException",
                    "message": "''${attribute or argument}'' attribute is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    }
                ]
        }

### Publish new images V2 [POST /rest/products/variations/v2/{product_partner_id}/images/]
Publish new image of service we have synchronous and asynchronous process. 
First of all, when the POST is received, the synchronous execution starting, at this time some validations are executed, 
if in this process has some inconsistence, it is going to return one or a list of exceptions (inconsistences), 
otherwise execution will proceed to the next step, the asynchronous process. 
At asynchronous process we have some other validations (more criticals validations), if the image has any inconsistence, 
it is going to publish a faults notification, other wise, a success notification.

You must read the notifications requesting service GET /rest/feed/product/

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            [
              {
                "index": 1,
                "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124341.jpg"
              },
              {
                "index": 2,
                "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg"
              },
              {
                "index": 3,
                "url": "https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124343.jpg"
              }              
            ]            

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausImageAlreadyExistsException",
            "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptions": [
                    {
                    "exceptionTypeName": "PosthausMandatoryArgumentException",
                    "message": "''${attribute or argument}'' argument is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausTooLargerAttributeValueException",
                    "message": "Too larger attribute value for ''{${attribute or argument}}'' (''${value}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausEmptyArrayException",
                    "message": "Array ''${attribute or argument}'' is empty.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryArgumentException",
                    "message": "''${attribute or argument}'' argument is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
                    "message": "''${attribute or argument}'' attribute is mandatory and greater than ''${value1}'' (${vallue2}: ''${value3}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausImageAlreadyExistsException",
                    "message": "Image already exists (productPartnerId: ''${attribute or argument}'', imageIndex: ''${value}'').",
                    "attOrArgName": "${attribute or argument}"
                    },
                    {
                    "exceptionTypeName": "PosthausMandatoryAttributeException",
                    "message": "''${attribute or argument}'' attribute is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                    }
                ]
        }


### Get images [GET]
Get a image list from a partner product.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        [  
           {
              "index":1,
              "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
           },
           {
              "index":2,
              "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
           },
           {
              "index":3,
              "url":"https://cdn.seusite.com.br/foto/vestido-preto-com-decote-transpassado_124342.jpg",
           }
        ] 

+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }

### Delete a image from product [DELETE /rest/products/variations/v1/{product_partner_id}/images/{index}] 
Publish a new image list from a partner product. Index 1 is the main image.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ


+ Response 204 (application/json)

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausProductNotFoundException",
        "message": "Product not found (product_partner_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryAttributeException",
        "message": "''${attribute or argument}'' attribute is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

# Group SKU

## Sizes [/rest/sizes/v1/{?page,limit}]
It will be used to read sizes registered in Maketplace Posthaus.

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Attributes (object)
    + sizes (array[ReadSize])
    + exception (Exception)    


### Read Sizes [GET]
Returns the registered Marketplace categories.

+ Request (application/json)
    + Headers
    
            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

        {
            "sizes": [
                {
                    "id": "43",
                    "description": "42"
                },
                {
                    "id": "44",
                    "description": "43"
                },
                {
                    "id": "45",
                    "description": "44"
                }
            ],
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
        }

+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }


## SKU [/rest/products/variations/v1/{product_partner_id}/skus/]

+ Parameters
    + product_partner_id (required, string, `9995586`) ... Patner product ID

+ Attributes (object)
    + sku (Sku)
    + exception (Exception)

### Create SKU [POST]
In SKU creation service we have synchronous and asynchronous process. 
First of all, when the POST is received, the synchronous execution starting, at this time some validations are executed, 
if in this process has some inconsistence, it is going to return one or a list of exceptions (inconsistences), 
otherwise execution will proceed to the next step, the asynchronous process. 
At asynchronous process we have some other validations (more criticals validations), if the SKU has any inconsistence, 
it is going to publish a faults notification, other wise, a success notification.

You must read the notifications requesting service GET /rest/feed/product/

+ Request (application/json)
    + Headersk

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
    
    + Body

            {
                "partnerId": "999826109",
                "ean": "4755721211",
                "amount": 1,
                "price": 299.99,
                "sellPrice": 130.0,
                "size": {
                    "partnerId": "24"
                },
                "height": 20.0,
                "width": 35.0,
                "length": 5.0,
                "weight": 5.180
            } 


+ Response 200 (application/json)

        {
            "eventId": "a5912bc7-ba63-45b9-bc5b-e0b29e6995d7",
            "createSKUsID": "1f94f503-84b4-484b-bf3c-d9a329a64567",
            "message": "SKU is going to be created asynchronously."
        }

+ Response 500 (application/json)
        
        {
            "exceptionTypeName": "PosthausException",
            "message": "An unexpected error occurred."
        }

+ Response 409 (application/json)

        {
            "exceptionTypeName": "PosthausSkusIdAlreadyExistsException",
            "message": "Skus already exists(skus: ''${attribute or argument}'').",
            "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
            "exceptions": [
                {
                    "exceptionTypeName": "PosthausMandatoryArgumentException",
                    "message": "''${attribute or argument}'' argument is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                },
                {
                    "exceptionTypeName": "PosthausTooLargerAttributeValueException",
                    "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
                    "attOrArgName": "${attribute or argument}"
                },
                {
                    "exceptionTypeName": "PosthausMandatoryAttributeException",
                    "message": "''${attribute or argument}'' attribute is mandatory.",
                    "attOrArgName": "${attribute or argument}"
                },
                {
                    "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
                    "message": "''${attribute or argument}'' argument is mandatory and greater than ''${value}''.",
                    "attOrArgName": "${attribute or argument}"
                }
            ]
        }

## SKUS [/rest/products/variations/v1/{product_partner_id}/skus]

+ Parameters
    + product_partner_id (required, string, `9995586`) ... product partner ID

+ Attributes (object)
    + sku (Sku)
    + exception (Exception)       


### Read SKUS [GET]
Returns all SKU from a product group (productGroupPartnerId).

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

            [
              {
                "partnerId": "600064144639",
                "ean": "7898357417892",
                "amount": 354,
                "price": 69.90,
                "sellPrice": 59.90,
                "size" : "P",
                "height": 30.00,
                "width": 45.00,
                "length": 10.00,
                "weight": 0.320
              },
              {
                "partnerId": "600064144634",
                "ean": "78983578989892",
                "amount": 354,
                "price": 48.90,
                "sellPrice": 59.90,
                "size" : "M",
                "height": 30.00,
                "width": 45.00,
                "length": 10.00,
                "weight": 0.320
              },
              {
                "partnerId": "600064144636",
                "ean": "7891227417892",
                "amount": 354,
                "price": 119.90,
                "sellPrice": 59.90,
                "size" : "44",
                "height": 30.00,
                "width": 45.00,
                "length": 10.00,
                "weight": 0.320
              }          
            ]

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausProductNotFoundException",
        "message": "Product not found (product_partner_id: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }
        

## SKU by id [/rest/products/variations/v1/{product_partner_id}/skus/{sku_partner_id}]

+ Parameters
    + product_partner_id (required, string, `9995586`) ... Patner product ID
    + sku_partner_id (required, string, `999558689`) ... Partner SKU ID

+ Attributes (object)
    + sku (Sku)
    + exception (Exception)        

### Read a SKU [GET]
Returns information about a SKU.


+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)

        {
            "id": "458896-P",
            "productId" : 458896,
            "partnerId": "600064144639",
            "productPartnerId" : "6000641446",
            "ean": "7898357417892",
            "amount": 20,
            "price": 69.90,
            "sellPrice": 59.90,
            "size": {
                "id": "M",
                "partnerId":"M3"
            },
            "height": 30.00,
            "width": 45.00,
            "length": 10.00,
            "weight": 0.320
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSkuNotFoundException",
        "message": "SKU not found (product_partner_id: ''{${attribute or argument}}'', partner_id: ''{${value}}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }



## Price [/rest/products/variations/v1/{product_partner_id}/skus/{sku_partner_id}/price/]

+ Parameters
    + product_partner_id (required, string, `9995586`) ... Patner product ID
    + sku_partner_id (required, string, `999558689`) ... Partner SKU ID

+ Attributes (object)
    + sku (SkuPrice)
    + exception (Exception)    

### Update SKU price [PUT]
In the one price update service, we have only synchronous process. 
When the PUT is received, the synchronous execution starting, at this time some data validations and persistences are performed, 
if in this process has some inconsistence, it is going to return one or a list of exceptions (inconsistences), otherwise it is going to return sucess.

You must read the notifications requesting service GET Price Notifications


+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body

            {
                "price": 159.90,
                "sellPrice": 119.90
            }
            

+ Response 200

        {
            "id": "458896-P",
            "productId" : 458896,
            "partnerId": "600064144639",
            "productPartnerId" : "6000641446",
            "ean": "7898357417892",
            "amount": 20,
            "price": 159.90,
            "sellPrice": 119.90,
            "size": {
                "id": "M",
                "partnerId":"M3"
            },
            "height": 30.00,
            "width": 45.00,
            "length": 10.00,
            "weight": 0.320
        }

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausSkuNotFoundException",
        "message": "SKU not found (product_partner_id: ''{${attribute or argument}}'', partner_id: ''{${value}}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' (''${value}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausPriceAndSellPriceValidationException",
        "message": "Attribute 'sellPrice' is greather than 'price', SKU partnerId: ''${attribute or argument}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausPriceTableNotFoundException",
        "message": "Price table not found, SellerId: ''${attribute or argument}'' (APC0070).",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
        "message": "Json request body is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

# Group Stock
It will be used to perform stock update.
The stock operation is performed in batch, it is possible to send one or more SKUs to update.

## Stocks [/rest/stocks/v1/]

+ Attributes (object)
    + stocks (array[Stock])
    + exception (Exception)

### Update Stock [PUT]
In stock update service we have synchronous and asynchronous process. 
First of all, when the PUT is received, the synchronous execution starting, at this time some validations are executed, 
if in this process has some inconsistence, it is going to return one or a list of exceptions (inconsistences), 
otherwise execution will proceed to the next step, the asynchronous process. 
At asynchronous process we have some other validations (more criticals validations), if the product has any inconsistence, 
it is going to publish a faults notification, other wise, a success notification.

You must read the notifications requesting service GET Stock Notifications and Stock Inconsistent Notifications

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

    + Body            

            [
                {
                    "partnerId": "8959860",
                    "quantity": 1
                },
                {
                    "partnerId": "8959861",
                    "quantity": 5
                },
                {
                    "partnerId": "8959862",
                    "quantity": 2
                }
            ]

+ Response 200 (application/json)

        {
            "updateStockID": "1f94f503-84b4-484b-bf3c-d9a329a68707",
            "message": "Stock SKU Update List is going to be updated asynchronously."
        }

+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }

# Group Freight Tariff

**This endpoint group is not on LIVE environmentlu**

Carrier rates are used as the basis for calculating the freight that will be paid by the customer at the time of purchase. This tariff is calculated according to some variables, for example,
zip code, shipping method, carrier used, etc. Therefore, each seller has their own freight tariff tables that they use. This service we provide helps the Seller
send us your practiced rates so that we can match in our marketplace.

## Unpublished Freight tariff [/rest/freight/tariff/unpublished/v1/]

+ Attributes (object)

    + freightTariffItem (FreightTariff)
    + exception (Exception)

### Add a new Freght Tariff Items [POST]

When there is not an unpublished Freight Tariff Table,  the first list of Freight Tariff Items added, is going to create table.

To create a new freight tariff table, the data is expected to be sent by the seller. After the data is consisted, it will be persisted in
database, creating a current freight tariff table.

+ Request (application/json)

  + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
                        
  + Body
    [
        {
            "startZipCode":1111111,
            "endZipCode":9999999,
            "startWeight":0.0,
            "endWeight":10.00,
            "startOrderValue":0.0,
            "endOrderValue":5000.00,
            "carrierDeliveryTime":1,
            "freightValue":9.99,
            "shippingType":"NORMAL",
            "carrier":"CORREIOS"
        },
        {
            "startZipCode":1111111,
            "endZipCode":9999999,
            "startWeight":10.01,
            "endWeight":20.00,
            "startOrderValue":0.0,
            "endOrderValue":5000.00,
            "carrierDeliveryTime":1,
            "freightValue":9.99,
            "shippingType":"EXPRESSA",
            "carrier":"CORREIOS"
        },
        {
            "startZipCode":1111111,
            "endZipCode":9999999,
            "startWeight":20.01,
            "endWeight":30.00,
            "startOrderValue":0.0,
            "endOrderValue":5000.00,
            "carrierDeliveryTime":1,
            "freightValue":9.99,
            "shippingType":"NORMAL",
            "carrier":"CORREIOS"
        },
        {
            "startZipCode":1111111,
            "endZipCode":9999999,
            "startWeight":30.01,
            "endWeight":40.00,
            "startOrderValue":0.0,
            "endOrderValue":5000.00,
            "carrierDeliveryTime":1,
            "freightValue":9.99,
            "shippingType":"EXPRESSA",
            "carrier":"CORREIOS"
        },
        {
            "startZipCode":1111111,
            "endZipCode":9999999,
            "startWeight":40.01,
            "endWeight":50.00,
            "startOrderValue":0.0,
            "endOrderValue":5000.00,
            "carrierDeliveryTime":1,
            "freightValue":9.99,
            "shippingType":"NORMAL",
            "carrier":"CORREIOS"
        }
    ]
    
+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }
        
+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausFreightTariffAlreadyExistsException",
        "message": "Freight Tariff already exists (line: ''${attribute or argument}'')."
        }
        
+ Response 400 (application/json)

        {
            "exceptions": [
            {
            "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
            "message": "Json request body is mandatory."
            },
            {
            "exceptionTypeName": "PosthausMandatoryAttributeException",
            "message": "''${attribute or argument}'' attribute is mandatory."
            },
            {
            "exceptionTypeName": "PosthausMandatoryAndGreaterThanAttributeException",
            "message": "''${attribute or argument}'' attribute is mandatory and greater than ''${value1}'' (${vallue2}: ''${value3}'')."
            },
            {
            "exceptionTypeName": "PosthausTooLargerAttributeValueException",
            "message": "Too larger attribute value for ''{${attribute or argument}}'' (''${value}'')."
            },
            {
            "exceptionTypeName": "PosthausTooSmallAttributeValueException",
            "message": "Too small attribute value for ''${attribute or argument}''."
            },
            {
            "exceptionTypeName": "PosthausInvalidAttributeValueException",
            "message": "Invalid value informed at ''${attribute or argument}''."
            },
            {
            "exceptionTypeName": "PosthausEmptyArrayException",
            "message": "Array ''${attribute or argument}'' is empty."
            }
            ]
        }


### Read unpublished freight tariffs table [GET /rest/freight/tariff/unpublished/v1/{?page,limit}]
This service return freight tariff table that have not yet been published. Therefore, it is possible to analyze the inconsistence messages, found in the registration of this new freight tariff table that has not yet been published.

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ


+ Response 200 (application/json)

        {
            "page": {
            "size": 100,
            "totalElements": 2,
            "totalPages": 1,
            "number": 1
            },
            "freightTariffs": [
                {
                    "startZipCode":1111111,
                    "endZipCode":9999999,
                    "startWeight":0.0,
                    "endWeight":99.99,
                    "startOrderValue":0.0,
                    "endOrderValue":5000.00,
                    "carrierDeliveryTime":1,
                    "freightValue":9.99,
                    "shippingMehod":"EXPRESSA",
                    "carrier":"CORREIOS",
                    "effectiveFreightDate":"2018-08-08T10:40:32Z",
                    "faults":""
                },
                {
                    "startZipCode":1111111,
                    "endZipCode":9999999,
                    "startWeight":0.0,
                    "endWeight":99.99,
                    "startOrderValue":0.0,
                    "endOrderValue":5000.00,
                    "carrierDeliveryTime":1,
                    "freightValue":9.99,
                    "shippingMehod":"",
                    "carrier":"",
                    "effectiveFreightDate":"2018-08-08T10:40:32Z",
                    "faults":"There are some problems in this register"
                }
            ]
}

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }


### Delete a unpublished freight tariff table [DELETE /rest/freight/tariff/unpublished/v1/] 
Deleting a freight tariff table is necessary when a new one has been created and the old one will be removed, thus keeping only one unpublished.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ


+ Response 204 (application/json)

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausFreightTariffNotFoundException",
        "message": "Freight tariff not found ."        
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryAttributeException",
        "message": "''${attribute or argument}'' attribute is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }
        
## Published Freight Tariff [/rest/freight/tariff/v1/]

+ Attributes (object)
    + freightTariff (FreightTariff)
    
    + exception (Exception)

 
### Publish a freight tariff table [PUT]
A freight tariff table will be published only when all inconsistencies are resolved by the seller. Once published, this new freight table will already be
ready for the new freight tariff calculations on the website.

+ Request (application/json)

  + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ


+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }
        
+ Response 409 (application/json)
        
        {
        "exceptionTypeName": "PosthausFreightTariffAlreadyExistsException",
        "message": "Table of freight tariff already exists."
        }
        
        
+ Response 404 (application/json)

            {
                "exceptions": [
                {
                "exceptionTypeName": "PosthausFreightTariffNotFoundException",
                "message": "This freight tariff table is not ready to publish yet. Errors that must to be fixed.( Total: 5 )"
                },
                {
                "exceptionTypeName": "PosthausFreightTariffNotFoundException",
                "message": "Freight tariff not found."
                }
                ]
            }
        
+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryAttributeException",
        "message": "''${attribute or argument}'' attribute is mandatory."
        }

### Read a published freight tariff table [GET /rest/freight/tariff/v1/{?page,limit}]
This service will return freight tariff already published and in effect on the website.

+ Parameters
    + page (optional, number) 
        Paging position
        
        + Default: `1`
        
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `100`

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ


+ Response 200 (application/json)

        [
            {
                "startZipCode":1111111,
                "endZipCode":9999999,
                "startWeight":0.0,
                "endWeight":99.99,
                "startOrderValue":0.0,
                "endOrderValue":5000.00,
                "carrierDeliveryTime":1,
                "freightValue":9.99,
                "shippingMehod":"EXPRESSA",
                "carrier":"CORREIOS",
                "effectiveFreightDate":"2018-08-08T10:40:32Z"
            },
            {
                "startZipCode":1111111,
                "endZipCode":9999999,
                "startWeight":0.0,
                "endWeight":99.99,
                "startOrderValue":0.0,
                "endOrderValue":5000.00,
                "carrierDeliveryTime":1,
                "freightValue":9.99,
                "shippingMehod":"NORMAL",
                "carrier":"CORREIO",
                "effectiveFreightDate":"2018-08-08T10:40:32Z"
            }
        ]

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

        
# Group Reverse Logistic
It will be used to receive information about Authorization Postcode of reverse logistic.

## Authorization Postcode [/rest/logistic/reverse/authorization/v1/{reverse_id}]

+ Parameters
    + reverse_id (required, number, `999558695`) ... Reverse ID generated by Seller

+ Attributes (object)
    + postcode (AuthorizationPostcode)
    + exception (Exception)    

### Receive a PostCode [POST]
Receive a Postcode and created date.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body  

            {
               "postcode": "0123456789",
               "createdAt": "2018-08-08T10:40:32Z"
            }

+ Response 204


+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 404 (application/json)

        {
        "exceptionTypeName": "PosthausReverseLogisticNotFoundException",
        "message": "Not found reverse logistic (Authorization Postcode: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausValidateDateException",
        "message": "''{${attribute or argument}}'' ''${value1}'' cannot be greater than current date ''${value2}''.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 409 (application/json)

        {
        "exceptionTypeName": "PosthausLogisticReversePostCodeAlreadyExistsException",
        "message": "Logistic reverse already exists (reverseId: ''${attribute or argument}'').",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryAttributeException",
        "message": "''${attribute or argument}'' attribute is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausJsonRequestBodyMandatoryException",
        "message": "Json request body is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausTooLargerAttributeValueException",
        "message": "Too larger attribute value for ''${attribute or argument}'' ('${value}').",
        "attOrArgName": "${attribute or argument}"
        }
        
+ Response 400 (application/json)

        {
            "exceptionTypeName": "PosthausInvalidAttributeValueException",
            "message": "Valor inválido informado no 'postcode'. "
        }

        
# Group Report/Financial

Financial services reports, It's optional to integrate.

## Receive Bills [/rest/reports/financial/bills/receive{?begin_due_date,end_due_date}]

+ Parameters
    + begin_due_date (required, string, `2018-08-08T00:00:00Z`) ... Begin due date to filter receive bills.
    + end_due_date (required, string, `2018-09-08T00:00:00Z`) ... End due date to filter receive bills.

+ Attributes (object)
    + receiveBillList (array[ReceiveBill])
    + exception (Exception)

### Receive Bills [GET]
It lists all receive bills according due date. A bill has any orders installments.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        [
            {
                "billNumber": 114,
                "billValue": 5422.31,
                "dueDate": "2019-10-02T00:00:00Z",
                "orderPartnerId": "432709185646",
                "orderTotal": 75.32,
                "installment": 5,
                "installmentValue": 15.08,
                "commissionFee": 14,
                "sellerTotal": 75.32
            },
            {
                "billNumber": 114,
                "billValue": 5422.31,
                "dueDate": "2019-10-02T00:00:00Z",
                "orderPartnerId": "432727345646,
                "orderTotal": 77.30,
                "installment": 5,
                "installmentValue": 15.46,
                "commissionFee": 14,
                "sellerTotal": 77.3
            }
        ]

+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidDateException",
        "message": "Invalid dates. The interval between ''${attribute or argument}'' and ''${value1}'' grather than ''${value2}'' days.",
        "attOrArgName": "${attribute or argument}"
        }


## Commissions [/rest/reports/financial/commission{?begin_due_date,end_due_date}]

+ Parameters
    + begin_due_date (required, string, `2018-08-08T00:00:00Z`) ... Begin due date to filter commission.
    + end_due_date (required, string, `2018-09-08T00:00:00Z`) ... End due date to filter commission.

+ Attributes (object)
    + commissionList (array[Commission])
    + exception (Exception)

### Commissions [GET]
It lists all commissions according due date.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        [
            {
                "orderCreatedAt": "2019-08-28T09:10:35Z",
                "orderPartnerId": "201800470269",
                "generationDate": "2019-10-15T13:22:14Z",
                "orderTotal": 78.25,
                "commissionFee": 14.0,
                "commissionValue": 10.96,
                "paymentMethodDescription": "CREDIT CARD"
            },
            {
                "orderCreatedAt": "2019-08-28T09:10:35Z",
                "orderPartnerId": "201800469354",
                "generationDate": "2019-10-15T13:22:14Z",
                "orderTotal": 77.78,
                "commissionFee": 14.0,
                "commissionValue": 10.89,
                "paymentMethodDescription": "CREDIT CARD"
            },
            {
                "orderCreatedAt": "2019-08-28T09:10:35Z",
                "orderPartnerId": "201800468776",
                "generationDate": "2019-10-15T13:22:14Z",
                "orderTotal": 79.2,
                "commissionFee": 14.0,
                "commissionValue": 11.09,
                "paymentMethodDescription": "CREDIT CARD"
            }
        ]

+ Response 204

+ Response 500 (application/json)

        {
        "exceptionTypeName": "PosthausException",
        "message": "An unexpected error occurred."
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausMandatoryArgumentException",
        "message": "''${attribute or argument}'' argument is mandatory.",
        "attOrArgName": "${attribute or argument}"
        }

+ Response 400 (application/json)

        {
        "exceptionTypeName": "PosthausInvalidDateException",
        "message": "Invalid dates. The interval between ''${attribute or argument}'' and ''${value1}'' grather than ''${value2}'' days.",
        "attOrArgName": "${attribute or argument}"
        }

# Group Report/Devolution

Devolution services reports, It's optional to integrate.

## Product devolution [/rest/reports/exchange/v1{?begin_order_date,end_order_date,reverseId,postCode,objectCode}]

+ Parameters
    + begin_order_date (required, string, `2018-08-08T00:00:00Z`) ... Begin due date to filter product devolution.
    + end_order_date (required, string, `2018-09-08T00:00:00Z`) ... End due date to filter product devolution.
    + reverseId (number, `999558695`) ... Reverse ID generated by Seller
    + postCode (string)... Post code authorization
    + objectCode (string)... Object code
    
+ Attributes (object)
    + productDevolutionList (array[ProductDevolution])
    + exception (Exception)

### Product devolution [GET]

List of returned products with their return reason and exchange type, so you can view all returned products and their reasons. 
The listing is according to the seller informed in the token.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)
        
        [ 
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T11:29:29",
                "partnerSKUId":"sku_ptnr_id-fa3fe87ae23a4c0",
                "returnReasonDescription":"Não gostei da cor",
                "indemnityTypeDescription":"CREDITO PARA PRÓXIMA COMPRA"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T11:29:29",
                "partnerSKUId":"sku_ptnr_id-fa3fe87ae23a4c0",
                "returnReasonDescription":"Não gostei da cor",
                "indemnityTypeDescription":"TROCA POR OUTROS PRODUTOS"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"36_a1298a71-580e-4641-8",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"ESTORNO CARTAO DE CRÉDITO"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"CDSKUP_B_557683_36",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"DEPÓSITO CONTA CORRENTE"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"CDSKUP_B_557679_36",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"DEPÓSITO CONTA CORRENTE"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"36_a1298a71-580e-4641-8",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"TROCA POR OUTROS PRODUTOS"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"CDSKUP_B_557683_36",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"ESTORNO CARTAO DE CRÉDITO"
           },
           { 
                "partnerOrderId":"0",
                "orderDate":"2019-12-19T15:19:26",
                "partnerSKUId":"CDSKUP_B_557679_36",
                "returnReasonDescription":"Cor é diferente da foto",
                "indemnityTypeDescription":"DEPÓSITO CONTA CORRENTE"
           }
        ]

+ Response 204

+ Response 500 (application/json)

        {
            "exceptionTypeName": "",
            "message": "",
            "attOrArgName": ""
        }
        
# Data Structures

## Exception (object)
+ exceptionTypeName (string, required) - Exception error Type Name. The exceptions always have a type name.
+ message (string, required) - This exception message will tell all error details.
+ attOrArgName (string) - This attribute is going to have values when it was an attribute validation.

## Page (object)
+ size (number, required) - Page size
+ totalElements (number, required) - Total of existing elements
+ totalPages (number, required) -  Total pages available
+ number (number, required) - Current page

## Notifications (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + updateStockID (number)
    + totalUpdateSku (number)
    + notFoundSkusId (array[string])

## NotificationsStockInc (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + sku (StockIncSku)

## NotificationsProduct (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + sucess (boolean)
    + product (ProductGroup)
+ faults (array[Exception])

## NotificationsPrices (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + updatePricesID (number)
    + totalUpdateSku (number)
    + skuPartnerIdsFault (array[string])

## NotificationsWithPartnerId (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + orderId (number)
    + partnerId (string, optional) - (Optional) Patner SKU ID

## NotificationsSku (object)
+ token (string, required)
+ type (string, required)
+ additionalData
    + partnerId (number)
    + message (string)
+ events (array[EventSku])

## NotificationsReverseLogistic (object)
+ token (string, required) - Token from reverse logistic notification record
+ type (string, required) - This case content LOGISTIC_REVERSE_AUTHORIZATION
+ additionalData
    + reverseId (number, required) - Id from reverse logistic into Posthaus
    
## OrderGet (object)    
+ id (number, required) - Order ID generated by Posthaus
+ partnerId (optional) - Partner Order ID
+ createdAt: `2018-08-08T10:40:32Z` (string, required) - Order creation date
+ paymentDate: `2018-08-08T10:40:32Z` (string, optional) - Order payment date

        OK. Request synchronized successfully with Marketplace
        ERROR. Error syncing to Marketplace
        WAITING. Waiting for synchronization with Marketplace
        
+ status (string, required) - Order status, following:
        "CANCELED" When the order is canceled.
        "PENDING" After a NEW_ORDER notification, waiting for the seller to integrate the order.       
        "INTEGRATED" After the order is integrated, waiting customer payment to send AUTHORIZED notification.     
        "WAITING_INVOICE" After an AUTHORIZED notification, waiting for the seller to invoice the order.     
        "INVOICED" After the order is invoiced, waiting for the seller to send the order.               
        "SENT" After the order is sent, waiting for the seller to delivery the order.                    
        "DELIVERED" After the order is delivered to customer.
        
 
+ discount (number, required) - Order discount
+ freight (number, required) - Freight value
+ freightCarrier (string, required) - Freight Carrier utilized on freight rate
+ freightEstimateDate: `2018-08-08T10:40:32Z` (string, required) - Freight estimate date to deliver
+ shippingType (string, required) - Shipping method selected by customer
+ gross (number, required) - Gross total without the freight value
+ total (number, required) - Total order with the freight value
+ invoices (array[OrderInvoice], optional) - Invoice data
+ shipping (OrderShippingAddressGet, required) - Delivery address
+ buyer (BuyerGet, required) - Customer data 
+ payments (OrderPaymentGet, required) - Payment data
+ items (array[OrderShippingItemGet], required) - Data for purchased products
+ tracking (OrderTracking, optional) - Delivery data

## OrderInvoice (object)
+ accessKey: 76384bfdjbfjd783464834 (string, required) - Invoice access key
+ series (string, required) - Invoice serial number
+ number (string, required) - Invoice number
+ date: `2018-08-08T10:40:32Z` (string, required) - Date of invoice issue
+ value (number, required) - Invoice total value
+ status (string) - Invoice status, informed by Marketplace:
        "INVOICED"
        "SENT"
        "CANCELED"
        "RETURNED"
        "LOST"
        
 

## BuyerGet (object) - Objeto do consumidor
+ name (string, required) - Buyer name
+ document (string, required) - Document number
+ documentType (string, required) - Document type

        Possibles values. CPF, CNPJ, OTHER
        
+ dddPhone (number, required) - Buyer's DDD phone Area Code         
+ phone (number, required) - Buyer's phone 
+ dddCellPhone (number, optional) - Buyer's DDD cellPhone Area Code
+ cellPhone (number, optional) - Buyer's cellphone

## OrderShippingAddressGet (object)
+ city (string, required) - City
+ state (string, required) - State
+ country (string, required) - Country
+ address (string, required) - Complete address
+ number (string, required) - Number
+ neighborhood (string, required) - Neighborhood
+ street (string, required) - Street
+ comment (string, optional) - Comment 
+ zipCode (string, required) - CEP
+ receiverName (string, required) - Sender's name for delivery
+ promisedShippingTime (string, required) - Date agreed for delivery

## PaymentMethod (object)
+ id (number, required) - ID
+ description (string, required) - Payment method 

        CREDIT CARD (0)
        BILLET (1)
        PAYMENT_ANTICIPATED (3)
        
## OrderPaymentGet (object)
+ method (PaymentMethod, required) 
+ value (number, required) - Payment value 
+ installments (number, optional) - Payment installments
+ marketplaceFee (number, optional) - Markplace fee

## OrderShippingItemGet (object)
+ product (SimpleProduct, required)
+ simpleSku (SimpleSku, required)
+ amount (number, required) - Item amount
+ unit (number, required) - Item price
+ gross (number, required) - Gross amount of the item (amount * unit)
+ total (number, required) - Total of the discount item applied (gross - discount)
+ discount (number, required) - Item discount
+ orderItemId (string, required): Item ID generated by Posthaus

## OrderTracking (object)
+ url (string, required) - URL for tracking
+ number (string, required) - Track number
+ carrier (string, required) - Carrier name
+ carrierDocument (string, required) - Carrier Document (CNPJ),
+ deliveredDate: `2018-08-08T10:40:32Z` (string, optional) - Delivery date to customer
+ estimateDate: `2018-08-08T10:40:32Z` (string, required) - Estimate delivery date
+ shippedDate: `2018-08-08T10:40:32Z` (string, required) - Carrier received date 

## SimpleProduct (object)
+ id (number, required) - Product ID in Posthaus
+ title (string, required) - Product title

## Event 
+ eventType (string)
+ event (string)
+ aditionalData (AditionalData)

## EventIncProduct
+ product (AditionalDataProduct)
+ sku (StockIncSku)
+ token (string)    

## AditionalData   
+ orderId (number)

## EventSku 
+ eventType (string)
+ event (string)
+ aditionalData (AditionalDataSku)

## AditionalDataProduct  
+ partnerId (string)
+ id (string)
+ sku (StockIncSku)

## AditionalDataPrices   
+ updatePricesID (number)

## AditionalDataSku
+ partnerId (number)

## EventPrices 
+ eventType (string)
+ event (string)
+ aditionalData (AditionalDataPrices)

## StockIncSku (object)
+ partnerId (string) - Patner SKU ID

## SimpleSku (object)
+ partnerId (string, required) - Partner SKU ID

## CanceledSku (object)
+ partnerId (string, required) - Patner SKU ID

## Stock (SimpleSku)
+ quantity (number, required) - quantity for update 

## Sku (SkuPrice)
+ partnerId (string, required) - Partner SKU ID
+ ean (number, optional) - SKU barcode. Max. Length: 15
+ amount (number) - SKU stock amount (initial stock amount)
+ price (number, optional) - SKU price. Max length of 15 digits with a scale of 2
+ sellPrice (number, required) - SKU price. Max length of 15 digits with a scale of 2
+ size  (Size, optional) - SKU size can be empty
+ height (number, optional) - SKU height in centimeters. Max. length of 7 digits with a scale of 2
+ width (number, optional) - SKU width in centimeters. Max length of 7 digits with a scale of 2
+ lenght (number, optional) - SKU lenght in centimeters. Max length of 7 digits with a scale of 2
+ weight (number, required) - SKU weight in kilograms. Max length of 7 digits with a scale of 3

## ReadSku (Sku)
+ id (string, required) - SKU ID generated by Posthaus

## SkuPrice (SimpleSku)
+ price (number, optional) - SKU price from "old price". Max length of 15 digits with a scale of 2.
+ sellPrice (number, required) - SKU price "new price". Max length of 15 digits with a scale of 2.

## BrandResponse (object)
+ id: `Max. Length: 4` (string) - Brand ID generated by Posthaus (Please inform id or partnerId)
+ name: `Max. Length: 30` (string, required)

## Brand (BrandResponse)
+ partnerId: `Max. Length: 30` (string) - Partner Brand ID (Please inform id or partnerId)

## Size (object)
+ id: `Max. Length: 3` (string) - Size ID generated by Posthaus (Please inform id or partnerId)
+ partnerId: `Max. Length: 30` (string) - Partner Size ID (Please inform id or partnerId)

## FullVariation (object)
+ productPartnerId (string, required) - Seller Product ID. Max. length of 30 digits
+ title: `Max. Length: 35` (string, required) - Variance title, this information will join in the Product Title.
+ predominantColor (PredominantColor, required) - This information is used on Product Filter.
+ skus (array[SKU], required)
+ images (array[Image], required) - Array of product images. Limit 20 records

## ReadVariation (FullVariation)
+ productId (number) - Posthaus Product ID

## PredominantColor (object)
+ id: `Max. Length: 30` (string) - Posthaus predominant color ID  (Please inform id or partnerId)
+ partnerId: `Max. Length: 30` (string) - Partner predominant color ID (Please inform id or partnerId)

## ImageResponse (object)
+ index (number, required) - Image index. Max. length of 3 digits
+ url (string, required) - URL from image. Max. length of 300 digits

## Image (ImageResponse)
+ id (number) - Image ID generated by Posthaus
+ standardUrl (string) - URL from image generated by Posthaus

## Category (object)
+ id (number) - Posthaus Category ID (Please inform id or partnerId). Max. length of 4 digits
+ partnerId (string) - Partner Category ID (Please inform id or partnerId). Max. length of 30 digits
+ subCategory (SubCategory, required)
+ subClass (SubClass)
+ productCustomFields (ProductCustomFields)

## ReadCategory (object)
+ id (number) - Posthaus Category ID (Please inform id or partnerId). Max. length of 4 digits
+ name (string) - Posthaus Category Name. Max. length of 35 digits
+ subCategory (ReadSubCategory, required)
+ subClass (ReadSubClass)
+ productCustomFields (ProductCustomFields, optional) - Representation of optional fields

## SKUCustomFields (object)
+ optionalFields (array[string], optional) - List with name of optional field(s) of SKUs

## VariationCustomFields (object)
+ optionalFields (array[string], optional) - List with name of optional field(s) of variations
+ skuCustomFields (SKUCustomFields, optional) - Representation of SKU custom fields

## ProductCustomFields (object)
+ optionalFields (array[string], optional) - List with name of optional field(s) of products
+ variationCustomFields (VariationCustomFields, Optional) - Representation of variation custom fields

## ReadSize (object)
+ id (number) - Posthaus Size ID (Please inform id or partnerId)
+ description (string) - Posthaus Size Description

## SubCategory (object)
+ id (number) - Posthaus Subcategory ID (Please inform id or partnerId). Max. length of 4 digits
+ partnerId (string) - Partner Subcategory ID (Please inform id or partnerId). Max. length of 35 digits

## ReadSubCategory (object)
+ id (number) - Posthaus Subcategory ID. Max. length of 4 digits
+ name (string) - Posthaus Category Name. Max. length of 35 digits

## SubClass (object)
+ id (number) - Posthaus Subclass ID (Please inform id or partnerId). Max. length of 4 digits
+ partnerId (string) - Partner Subclass ID (Please inform id or partnerId). Max. length of 35 digits

## ReadSubClass (object)
+ id (number) - Posthaus Subclass ID. Max. length of 4 digits
+ name (string) - Posthaus Category Name. Max. length of 35 digits

## Characteristic (object)
+ name: `Max. Length: 30` (string, required) - Characteristic name. Some characteristic name examples: Fit/shape, Cinto/faixa, Modelagem, Modelo, Comprimento da manga, Modelo da Manga, Comprimento, Forro, Cinto/Faixa, Cintura, Decote, Frente, Estampa exclusiva, Decote Costas, Fechamento, Complemento, Altura do salto, Altura do cano, Alça, Forro, Comprimento, Cintura, Modelo, Decote frente, Decote costas, Cava, Comprimento da manga, Modelo da manga, Complemento, Fechamento, etc.
+ value: `Max. Length: 30` (string, required) - Characteristic value 

## FullProduct (object)
+ productGroupPartnerId: `Max. Length: 30` (string, required) - Product group in partner
+ brand  (Brand, required) - Brand of the product
+ title: `Max. Length: 65limite ` (string, required) - Only plain text and numbers
+ description: `Max. Length: 4000` (string, required) - Only plain text and numbers
+ gender (string, required) - F for female, M for male or  U  for others. Max. length of 1 digits
+ ageGroup (string, required) - B for Baby, I  for Infant, J para Juvenile or A for Adult. Max. length of 1 digits
+ variations (array[FullVariation], required) - Variation of product
+ collection (string) - Collection of the product, if applicable, like `Autumn, Winter, Summer, etc`
+ characteristics (array[Characteristic]) - Array of product characteristics. Limit 30 records.
+ category (Category, required)  - Category of the product, if applicable

## ProductStatus (object)
+ productGroupPartnerId: `Max. Length: 30` (string) - Product group in partner
+ productStatus (string) - Product Status - SUCCESS Product success, CONTAINS_FAULTS Product contains falts and ERROR Unexpected error occurred
+ variations (array[VariationStatus], required) - Variation of product

## AuthorizationPostcode (object)
+ postcode: `Max. Length: 10` (string, required) - Postcode - only numbers allowed. Currently all reverse logistics code generated by Correios are numbers.
+ createdAt: `2018-08-08T10:40:32Z` (string, required) - Created Date

## VariationStatus
+ productPartnerId (string) - Seller Product ID. Max. length of 30 digits
+ variationStatus (string) - Variation Status - SUCCESS Product/Variation/sku success, CONTAINS_FAULTS Product/Variation/sku contains falts and ERROR Unexpected error occurred
+ publishStatus (string) - Post Status - SUCCESS Variation publish success, PENDING Variation pending publish in marketplace Posthaus
+ skus (array[SkuStatus], required)

## SkuStatus
+ partnerId (string) - Partner SKU ID
+ skuStatus (string) - Sku Status - SUCCESS Sku success, CONTAINS_FAULTS Sku contains falts and ERROR Unexpected error occurred

## ProductGroup (object)
+ productGroupPartnerId: `Max. Length: 30` (string, required) - Product group in partner

## ReadFullProduct (FullProduct)
+ productGroupId (number) - Product group Posthaus
+ variations (ReadVariation, required) - Variation Produto, like color.

## ReceiveBill (object)
+ billNumber (number, required) - Bill Number
+ billValue (number, required) - Bill Value
+ dueDate: `2018-08-08T10:40:32Z` (string, required) - Bill due date)
+ orderPartnerId (number, required) - Order Partner ID
+ orderTotal (number, required) - Order total value
+ installment (number, required) - Installment number, the order value can be divided in any installments to pay the seller.
+ installmentValue (number, required) - Installment value
+ commissionFee (number, required) - Marketplace Comission Fee (percent)
+ sellerTotal (number, required) - Base value from order to calculate the value to pay the seller.

## Commission (object)
+ orderCreatedAt: `2018-08-08T10:40:32Z` (string, required) - Order creation date
+ orderPartnerId (number, required) - Order Partner ID
+ generationDate: `2018-08-08T10:40:32Z` (string, required) - Receive Bill Value and Commission Value generation date. (usually after Order Delivered or Canceled)
+ orderTotal (number, required) - Order total value
+ commissionFee (number, required) - Marketplace Comission Fee (percent)
+ commissionValue (number, required) - Marketplace Comission value (money)
+ paymentMethodDescription (string, required) - Customer payment method chose

## ProductDevolution (object)
+ partnerOrderId (string) - Partner order Id 
+ orderDate: `2018-08-08T10:40:32Z` (string, required) - Order creation date
+ partnerSKUId (string) - Partner SKU ID
+ returnReasonDescription (string) - Description of reason for product return
+ indemnityTypeDescription (string) - Description of indemnity type

## FreightTariff (object)
+ startZipCode (number, required) - CEP
+ endZipCode (number, required) - CEP
+ startWeight (number, required) - Freight weight in kilograms. Max length of 7 digits with a scale of 3
+ endWeight (number, required) - Freight weight in kilograms. Max length of 7 digits with a scale of 3
+ startOrderValue (number, required) - Total order value. Max length of 15 digits with a scale of 2
+ endOrderValue (number, required) - Total order value. Max length of 15 digits with a scale of 2
+ carrierDeliveryTime (number, required) - quantity of days to carrier delivery
+ freightValue (number, required) - Freight total value
+ shippingType (string, required) - Shipping method
+ carrier (string, required) - Carrier name
+ effectiveFreightDate: `2018-08-08T10:40:32Z` (string, required) - effective freight date
+ faults (string) - This message will tell all error details. When there are any Freight Tariff with error message, the freight tariff table is going not be published.