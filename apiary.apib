FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# API Marketplace Posthaus

This API intends to integrate the data between the Posthaus Marketplace Platform and the Sellers.

**Note:** Non-mandatory attributes and parameters will be identified with the "optional".

# Data Structures

## Page (object)
+ size (number) - Page size
+ totalElements (number) - Total of existing elements
+ totalPages (number) -  Total pages available
+ number (number) - Current page

## Notifications (object)
+ token (string)
+ type (string)
+ additionalData
    + orderId (number)
+ events (array)
    + eventType (string)
    + event (string)
    + additionalData
        + orderId (number)

## OrderGet (object)    
+ id (number) - Order ID generated by Posthaus
+ partnerId (string, optional) - Partner Order ID
+ createdAt: `2018-08-08T10:40:32Z` (string) - Order creation date
+ paymentDate: `2018-08-08T10:40:32Z` (string, optional) - Order payment date
+ cancelDate: `2018-08-08T10:40:32Z` (string, optional) - Order cancellation date
+ transmissionStatus (string) - Transmission status

        OK. Request synchronized successfully with Marketplace
        ERROR. Error syncing to Marketplace
        WAITING. Waiting for synchronization with Marketplace
        
+ status (string) - Status do pedido
        
        CONCLUDED. Order delivered
        CANCELED. Canceled
        INVOICED. Billed
        PAID_WAITING_DELIVERY. Sent (awaiting delivery)
        PAID_WAITING_SHIP. Payment (awaiting delivery)
        PENDING. Pending (Not yet paid)
 
+ discount (number) - Order discount
+ freight (number) - Freight value
+ gross (number) - Gross total without the freight value
+ total (number) - Total order with the freight value
+ invoice (OrderInvoice, optional) - Invoice data
+ shipping (OrderShippingAddressGet) - Delivery address
+ buyer (BuyerGet) - Customer data 
+ payments (OrderPaymentGet) - Payment data
+ items (array[OrderShippingItemGet]) - Data for purchased products
+ tracking (OrderTracking, optional) - Delivery data

## OrderInvoice (object)
+ accessKey (string) - Invoice access key
+ series (string, optional) - Invoice serial number
+ number (string, optional) - Invoice number
+ date: `2018-08-08T10:40:32Z` (string) - Date of invoice issue

## BuyerGet (object) - Objeto do consumidor
+ name (string) - Buyer name
+ document (string) - Document number
+ documentType (string) - Document type

        Possibles values. CPF, CNPJ, OTHER
        
+ phone (string) - Buyer's phone 
+ cellPhone (string, optional) - Buyer's cellphone

## OrderShippingAddressGet (object)
+ city (string) - City
+ state (string) - State
+ country (string) - Country
+ address (string) - Complete address
+ number (string) - Number
+ neighborhood (string) - Neighborhood
+ street (string) - Street
+ comment (string, optional) - Comment 
+ zipCode (string) - CEP
+ receiverName (string) - Sender's name for delivery
+ promisedShippingTime (string) - Date agreed for delivery

## PaymentMethod (object)
+ id (number) - ID
+ description (string) - Payment method 

        CREDIT CARD (0)
        BILLET (1)
        PAYMENT_ANTICIPATED (3)
        
## PaymentStatus (object)
+ id (number) - ID
+ description (string) - Payment status 

        WAITING_AUTORIZATION (1)
        AUTHORIZED (2)
        UNAPPROVED (3)
        WAITING_CONFIMARTION_PAYMENT (4)
        PAYMENT_CONFIRMED (5)
        PAYMENT_ANTICIPATED (6)
        CANCELED (7)

## OrderPaymentGet (object)
+ method (PaymentMethod) 
+ status (PaymentStatus)
+ value (number) - Payment value 
+ installments (number, optional) - Payment installments
+ marketplaceFee (number, optional) - Markplace fee

## OrderShippingItemGet (object)
+ product (SimpleProduct)
+ sku (SimpleSku)
+ amount (number) - Item amount
+ unit (number) - Item price
+ gross (number) - Gross amount of the item (amount * unit)
+ total (number) - Total of the discount item applied (gross - discount)
+ discount (number) - Item discount
+ shippings (OrderItemShippingGet, optional)
+ orderItemId (string): Item ID generated by Posthaus

## OrderTracking (object)
+ url (string, optional) - URL for tracking
+ number (string, optional) - Track number
+ carrier (string) - Carrier name
+ date: `2018-08-08T10:40:32Z` (string, optional) - date of the tracking
+ deliveredDate: `2018-08-08T10:40:32Z` (string, optional) - Delivery date to customer
+ estimateDate: `2018-08-08T10:40:32Z` (string) - Estimate delivery date
+ shippedDate: `2018-08-08T10:40:32Z` (string) - Carrier received date 

## SimpleProduct (object)
+ id (number) - Product ID in Posthaus
+ title (string) - Product title

## SimpleSku (object)
+ id (string) - SKU ID generated by Posthaus
+ title (string) - SKU title
+ partnerId (string, optional) - Patner SKU ID

## OrderItemShippingGet (object)
+ id (number) - Type ID
+ shippingtype (string) - Shipping method selected by customer

## Stock (object)
+ id (string) - SKU ID generated by Posthaus
+ partnerId (string, optional) - Patner SKU ID
+ quantity (number) - quantity for update 
+ cost (number) - Custo médio do SKU no estoque. A partir desse custo será calculado o preço final do produto caso o tipo do cálculo de preço esteja como atutomático. , //REVISAR

## Sku (object)
+ id (number) - SKU ID generated by Posthaus
+ title (number) - SKU title
+ partnerId (string, optional) - Patner SKU ID
+ ean (string, optional) - SKU barcode
+ amount (number) - SKU amount
+ price (number) - SKU price


# Group Order

## Order by id [/rest/auth/v1/orders/{order_id}]

+ Parameters
    + order_id (required, number, `999558695`) ... Order ID generated by Posthaus

+ Attributes (object)
    + notifications (Notifications)
    + order (OrderGet)


### Read a Order [GET]
Returns the order details by order number.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)
    + Attributes (Order by id)
    
        {
            "order": {
              "id": 0,
              "partnerId": "string",
              "createdAt": "2018-08-08T10:40:32Z",
              "paymentDate": "2018-08-08T10:40:32Z",
              "cancelDate": "2018-08-08T10:40:32Z",
              "transmissionStatus": "OK",
              "status": "PENDING",
              "discount": 2.10,
              "freight": 9.90,
              "gross": 60,
              "total": 69.90,
              "invoice": {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z"
              },
              "shipping": {
                "city": "Blumenau",
                "state": "SC",
                "country": "Brasil",
                "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
                "number": "1069",
                "neighborhood": "Centro",
                "street": "Rua Sete de Setembro",
                "comment": "",
                "reference": "Sala 10A - Edifício Dumóvel",
                "zipCode": "89010207",
                "receiverName": "João",
                "promisedShippingTime": "2018-08-08T10:40:32Z"
              },
              "buyer": {
                "name": "João",
                "document": "56786132006",
                "documentType": "CPF",
                "phone": "554733385566",
                "cellPhone": "5547988995566"
              },
              "payments": {
                  "method": {
                    "id": 0,
                    "description": "CREDIT CARD"
                  }
                  "status": {
                    "id": 1,
                    "description": "WAITING_AUTORIZATION"
                  }
                  "value": 69.90,
                  "installments": 2,
                  "marketplaceFee": 5.0
              },
              "items": [
                {
                  "product": {
                    "id": 568898,
                    "title": "Vestido da moda"
                  },
                  "sku": {
                    "id": 568898,
                    "title": "Vestido da moda",
                    "partnerId": "F7778458"
                  },
                  "amount": 1,
                  "unit": 69.90,
                  "gross": 69.90,
                  "total": 67.91,
                  "discount": 1.99,
                  "shippings": {
                      "id": 3,
                      "shippingtype": "NORMAL"
                  },
                  "orderItemId": "1"
                }
              ],
              "tracking": {
                "url": "http://websro.correios.com.br/sro_bin",
                "number": "SP89598599",
                "carrier": "CORREIOS",
                "date": "2018-08-08T10:40:32Z",
                "deliveredDate": "2018-08-08T10:40:32Z",
                "estimateDate": "2018-08-08T10:40:32Z",
                "shippedDate": "2018-08-08T10:40:32Z"
              }
            }
        }

### Update order status [PUT]

Updates order status by order number.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        

## Orders [/rest/auth/v1/orders{?offset,limit,createdAfter,status,cpf}]

+ Parameters
    + createdAfter (required, string, `2018-08-08T10:40:32Z`) ... Order creation date
    + status (optional, string) ... Order status
    + cpf (optional, string) ... Document number - CPF
    + offset (required, number, `1`) ... Paging position
    + limit (optional, number)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.

        + Default: `10`


+ Attributes (object)
    + order (OrderGet)
    + page (Page)


### Read a Order [GET]
Returns the order details using the filters.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)
    + Attributes (Orders)
    
        {
            "order": {
              "id": 0,
              "partnerId": "string",
              "createdAt": "2018-08-08T10:40:32Z",
              "paymentDate": "2018-08-08T10:40:32Z",
              "cancelDate": "2018-08-08T10:40:32Z",
              "transmissionStatus": "OK",
              "status": "PENDING",
              "discount": 2.10,
              "freight": 9.90,
              "gross": 60,
              "total": 69.90,
              "invoice": {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z"
              },
              "shipping": {
                "city": "Blumenau",
                "state": "SC",
                "country": "Brasil",
                "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
                "number": "1069",
                "neighborhood": "Centro",
                "street": "Rua Sete de Setembro",
                "comment": "",
                "reference": "Sala 10A - Edifício Dumóvel",
                "zipCode": "89010207",
                "receiverName": "João",
                "promisedShippingTime": "2018-08-08T10:40:32Z"
              },
              "buyer": {
                "name": "João",
                "document": "56786132006",
                "documentType": "CPF",
                "phone": "554733385566",
                "cellPhone": "5547988995566"
              },
              "payments": {
                  "method": {
                    "id": 0,
                    "description": "CREDIT CARD"
                  }
                  "status": {
                    "id": 1,
                    "description": "WAITING_AUTORIZATION"
                  }
                  "value": 69.90,
                  "installments": 2,
                  "marketplaceFee": 5.0
              },
              "items": [
                {
                  "product": {
                    "id": 568898,
                    "title": "Vestido da moda"
                  },
                  "sku": {
                    "id": 568898,
                    "title": "Vestido da moda",
                    "partnerId": "F7778458"
                  },
                  "amount": 1,
                  "unit": 69.90,
                  "gross": 69.90,
                  "total": 67.91,
                  "discount": 1.99,
                  "shippings": {
                      "id": 3,
                      "shippingtype": "NORMAL"
                  },
                  "orderItemId": "1"
                }
              ],
              "tracking": {
                "url": "http://websro.correios.com.br/sro_bin",
                "number": "SP89598599",
                "carrier": "CORREIOS",
                "date": "2018-08-08T10:40:32Z",
                "deliveredDate": "2018-08-08T10:40:32Z",
                "estimateDate": "2018-08-08T10:40:32Z",
                "shippedDate": "2018-08-08T10:40:32Z"
              }
            },
            "page": {
                "size": 2,
                "totalElements": 6,
                "totalPages": 3,
                "number": 1
            }
          }
        }


## Received order [/rest/auth/v1/order/received]

### Received order [PUT]

Confirms the order was received and all its information was validated, specially its order itens stock.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }


## Order Item [/rest/auth/v1/order/item]

### Update order item status [PUT]

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
#Group Protocol

## Protocol [/rest/auth/v1/protocol]

### Open new Protocol [POST]

Open new Protocol according the subject.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
### Get Protocol [GET]

Get a protocol by id.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
### Answer Protocol [PUT]

Post an answer to a protocol.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }

## Protocols [/rest/auth/v1/protocols]

### List protocols [GET]

List protocols.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }

#Group Notifications

## Notification [/rest/auth/v1/notifications]

### Get the oldest notification unreaded [GET]

The Marketplace Posthaus add notifications into a queue, the queue order is from the oldest to the newest notification added.
These GET service is going to return the oldest notification, after these notification is going to mark as readed, the next notification is going to be avaliable to GET. 

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
    
+ Response 200 (application/json)

        {
            "init": "init"
        }

## Notifications list [/rest/auth/v1/notes{?offset,limit}]

+ Parameters
    + offset (required, number, `1`) ... Paging position
    + limit (number, optional)

        A limit on the number of objects to be returned. Limit can range
        between 1 and 100 items.
    
        + Default: `10`

+ Attributes (object)
    + notifications (Notifications)
    + page (Page)


### Paginated notifications list [GET]
Get a paginated notifications list

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)
    + Attributes (Notifications list)

        {
          "notifications": [
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "NEW_ORDER",
              "additionalData": {
                "orderId": 45687920
              },
              "events": [
                {
                  "eventType": "getOrder",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/order/45687920",
                  "additionalData": {
                    "orderId": 45687920
                  }
                },
                {
                  "eventType": "markAsRead",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/note/markAsRead/45g65d4sdf5465sdf5",
                  "additionalData": {
                    "token": "45g65d4sdf5465sdf5"
                  }        
                }
              ]
            },
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "NEW_ORDER",
              "additionalData": {
                "orderId": 45687920
              },
              "events": [
                {
                  "eventType": "getOrder",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/order/45687920",
                  "additionalData": {
                    "orderId": 45687920
                  }
                },
                {
                  "eventType": "markAsRead",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/note/markAsRead/45g65d4sdf5465sdf5",
                  "additionalData": {
                    "token": "45g65d4sdf5465sdf5"
                  }        
                }
              ]
            }
          ],
          "page": {
            "size": 2,
            "totalElements": 6,
            "totalPages": 3,
            "number": 1
          }
        }

## Mark as read [/rest/auth/v1/notes/markAsRead/{token}]

### Mark as read notification [PUT]

Mark as read a notification. If the notification won't be readed during 30 days, the SellerCenter is going to automatically mark as read it.

+ Parameters
    + token (required, string, `45g65d4sdf5465sdf5`) ... Token

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 204


# Group Stock

## Stocks [/rest/auth/v1/stocks/]

+ Attributes (object)
    + stocks (array[Stock])


### Read Stock [GET]
Returns stock from a list of items.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            
    + Body            
    
            {
              "sku" : [
                "8959860", "8959861", "8959862"
              ]
            }

+ Response 200 (application/json)
    + Attributes (Stocks)
    
        [
            {
                "id": "458896-P",
                "partnerId": "8959860",
                "quantity": 1,
                "cost": 99.9
            },
            {
                "id": "458896-P",
                "partnerId": "8959861",
                "quantity": 1,
                "cost": 99.9
            },
            {
                "id": "458896-P",
                "partnerId": "8959862",
                "quantity": 1,
                "cost": 99.9
            }
        ]

# Group SKU

## SKUS [/rest/auth/v1/skus/{product_Id}]

+ Parameters
    + product_Id (required, number, `9995586`) ... Patner product ID

+ Attributes (object)
    + skus (array[Sku])


### Read skus [GET]
Returns all SKU from a product.


+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)
    + Attributes (SKUS)
    
        [
          {
            "id": "458896-P",
            "title": "vestido de festa preto",
            "partnerId": "99955861",
            "ean": "7898357417892",
            "amount": 20,
            "price": 69.90
          },
          {
            "id": "458896-M",
            "title": "vestido de festa preto",
            "partnerId": "99955862",
            "ean": "7898357417892",
            "amount": 10,
            "price": 69.90
          },
          {
            "id": "458896-G",
            "title": "vestido de festa preto",
            "partnerId": "99955863",
            "ean": "7898357417892",
            "amount": 25,
            "price": 69.90
          }          
        ]


## SKU [/rest/auth/v1/skus/{product_Id}/{sku_id}]

+ Parameters
    + product_Id (required, number, `9995586`) ... Patner product ID
    + sku_id (required, number, `999558689`) ... Patner SKU ID

+ Attributes (object)
    + skus (Sku)


### Read skus [GET]
Returns all SKU from a product.


+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
            

+ Response 200 (application/json)
    + Attributes (SKU)
    
          {
            "id": "458896-P",
            "title": "vestido de festa preto",
            "partnerId": "999558689",
            "ean": "7898357417892",
            "amount": 20,
            "price": 69.90
          }