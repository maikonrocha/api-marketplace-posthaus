FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# API Marketplace Posthaus

Esta API tem por objetivo Integrar os dados entre a Plataforma Posthaus Marketplace e os Sellers.

**Note:** Os atributos e parâmetros não obrigatórios serão identificados com o "optional".

# Data Structures

## Page (object)
+ size (number)
+ totalElements (number)
+ totalPages (number)
+ number (number)

## OrderInvoice (object)
+ accessKey (string) - Chave de acesso da nota fiscal
+ series (string, optional) - Número de série da nota fiscal
+ number (string, optional) - Número da nota fiscal
+ date: `2018-08-08T10:40:32Z` (string) - Data de emissão da nota fiscal

## BuyerGet (object) - Objeto do consumidor
+ name (string) - Nome do comprador
+ document (string) - Número do documento
+ documentType (string) - Tipo do documento

        Valores possíveis CPF, CNPJ, OTHER
        
+ phone (string) - Telefone do comprador 
+ cellPhone (string, optional) - Celular do comprador

## OrderShippingAddressGet (object)
+ city (string) - Cidade
+ state (string) - Sigla do Estado 
+ country (string) - País
+ address (string) - Endereço
+ number (string) - Número
+ neighborhood (string) - Bairro
+ street (string) - Rua
+ comment (string, optional) - Complemento 
+ zipCode (string) - CEP
+ receiverName (string) - Nome do remetente para entrega
+ promisedShippingTime (string) - Data acordada para entrega

## OrderPaymentGet (object)
+ method (string) - Método de pagamento

        CARTAO_CREDITO
        BOLETO
        TRANSFERENCIA
        PAGAMENTO_ANTECIPADO
        CARTAO_DEBITO
        
+ status (string, optional) - Status do pagamento

        AGUARDANDO_AUTORIZACAO
        AUTORIZADO
        NAO_AUTORIZADO
        AGUARDANDO_CONFIRMACAO_PAGAMENTO
        PAGAMENTO_CONFIRMADO
        PAGAMENTO_ANTECIPADO
        CANCELADO

+ value (number) - Valor do pagamento
+ installments (number, optional) - Número de parcelas do meio do pagamento
+ marketplaceFee (number, optional) - Taxa referente ao Marketplace

## OrderShippingItemGet (object)
+ product (SimpleProduct)
+ sku (SimpleSku)
+ amount (number) - Quantidade do item
+ unit (number) - Preço do item
+ gross (number) - Valor bruto do item (amount * unit)
+ total (number) - Total do item com desconto aplicado (gross - discount)
+ discount (number) - Desconto do item
+ shippings (OrderItemShippingGet, optional)
+ orderItemId (string): Id do item no pedido gerado pelo Posthaus

## OrderTracking (object)
+ url (string, optional) - URL para o rastreamento
+ number (string, optional) - Número de rastreio
+ carrier (string) - Nome da transportadora
+ date: `2018-08-08T10:40:32Z` (string, optional) - Data do rastreio
+ deliveredDate: `2018-08-08T10:40:32Z` (string, optional) - Data de entrega ao Cliente
+ estimateDate: `2018-08-08T10:40:32Z` (string) - Data estimada
+ shippedDate: `2018-08-08T10:40:32Z` (string) - Data em que foi entregue a transportadora

## SimpleProduct (object)
+ id (number) - ID do produto no Posthaus
+ title (string) - Título do produto

## SimpleSku (object)
+ id (number) - ID do SKU gerado pelo Posthaus
+ title (string) - Título do SKU
+ partnerId (string, optional) - ID do SKU no parceiro

## OrderItemShippingGet (object)
+ id (number) - ID do tipo de envio
+ shippingtype (string) - Forma de envio selecionado pelo cliente


#Group Order

## Order [/rest/auth/v1/orders]

### Update order status [PUT]

Updates order status by order number.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }


## Orders [/rest/auth/v1/orders/{order_id}]

+ Parameters
    + order_id (required, number, `999558695`) ... ID do pedido gerado pelo Posthaus

+ Attributes (object)
    + notifications
        + token (string)
        + type (string)
        + additionalData
            + orderId (number)
        + events (array)
            + eventType (string)
            + event (string)
            + additionalData
            + orderId (number)
    + Order
        + id (number) - ID do pedido gerado pelo Posthaus
        + partnerId (string, optional) - Código do pedido no parceiro. Uma vez informado, não poderá ser alterado
        + createdAt: `2018-08-08T10:40:32Z` (string) - Data de criação do pedido
        + paymentDate: `2018-08-08T10:40:32Z` (string, optional) - Data de pagamento do pedido
        + cancelDate: `2018-08-08T10:40:32Z` (string, optional) - Data de cancelamento do pedido
        + transmissionStatus (string) - Status da transmissão
        
                OK. Pedido sincronizado com sucesso com o Marketplace
                ERROR. Ocorreu erro na sincronização com o Marketplace
                WAITING. Aguardando sincronização com o Marketplace
            
        + status (string) - Status do pedido
                
                CONCLUDED. Pedido entregue
                CANCELED. Cancelado
                INVOICED. Faturado
                PAID_WAITING_DELIVERY. Enviado (aguardando entrega)
                PAID_WAITING_SHIP. Pago (está aguardando envio)
                PENDING. Pendente (Ainda não foi pago)
                
        + discount (number) - Desconto do pedido
        + freight (number) - Valor de frete
        + gross (number) - Total bruto sem o valor de frete
        + total (number) - Total do pedido com o valor de frete
        + invoice (OrderInvoice, optional) - Dados da nota fiscal
        + shipping (OrderShippingAddressGet) - Endereço de entrega 
        + buyer (BuyerGet) - Dados do comprador
        + payments (OrderPaymentGet) - Dados referente a pagamento
        + items (array[OrderShippingItemGet]) - Dados referente aos produtos comprados
        + tracking (OrderTracking, optional) - Dados referente a entrega


### Read a Order [GET]
Returns the order details by order number.

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)

        {
            "order": {
              "id": 0,
              "partnerId": "string",
              "createdAt": "2018-08-08T10:40:32Z",
              "paymentDate": "2018-08-08T10:40:32Z",
              "cancelDate": "2018-08-08T10:40:32Z",
              "transmissionStatus": "OK",
              "status": "PENDING",
              "discount": 2.10,
              "freight": 9.90,
              "gross": 60,
              "total": 69.90,
              "invoice": {
                "accessKey": "NFe35080599999090910270550010000000015180051273",
                "series": "1",
                "number": "35",
                "date": "2018-08-08T10:40:32Z"
              },
              "shipping": {
                "city": "Blumenau",
                "state": "SC",
                "country": "Brasil",
                "address": "Rua Sete de Setembro, 1069, 1º. Andar - Sala 10A - Edifício Dumóvel - 89.010-207 - Blumenau - SC ",
                "number": "1069",
                "neighborhood": "Centro",
                "street": "Rua Sete de Setembro",
                "comment": "",
                "reference": "Sala 10A - Edifício Dumóvel",
                "zipCode": "89010207",
                "receiverName": "João",
                "promisedShippingTime": "2018-08-08T10:40:32Z"
              },
              "buyer": {
                "name": "João",
                "document": "56786132006",
                "documentType": "CPF",
                "phone": "554733385566",
                "cellPhone": "5547988995566"
              },
              "payments": {
                  "method": "CARTAO_CREDITO",
                  "status": "AGUARDA_FATURAMENTO",
                  "value": 69.90,
                  "installments": 2,
                  "marketplaceFee": 5.0
              },
              "items": [
                {
                  "product": {
                    "id": 568898,
                    "title": "Vestido da moda"
                  },
                  "sku": {
                    "id": 568898,
                    "title": "Vestido da moda",
                    "partnerId": "F7778458"
                  },
                  "amount": 1,
                  "unit": 69.90,
                  "gross": 69.90,
                  "total": 67.91,
                  "discount": 1.99,
                  "shippings": {
                      "id": 3,
                      "shippingtype": "NORMAL"
                  },
                  "orderItemId": "1"
                }
              ],
              "tracking": {
                "url": "http://websro.correios.com.br/sro_bin",
                "number": "SP89598599",
                "carrier": "CORREIOS",
                "date": "2018-08-08T10:40:32Z",
                "deliveredDate": "2018-08-08T10:40:32Z",
                "estimateDate": "2018-08-08T10:40:32Z",
                "shippedDate": "2018-08-08T10:40:32Z"
              }
            }
        }

## Received order [/rest/auth/v1/order/received]

### Received order [PUT]

Confirms the order was received and all its information was validated, specially its order itens stock.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }


## Order Item [/rest/auth/v1/order/item]

### Update order item status [PUT]

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
#Group Protocol

## Protocol [/rest/auth/v1/protocol]

### Open new Protocol [POST]

Open new Protocol according the subject.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
### Get Protocol [GET]

Get a protocol by id.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }
        
### Answer Protocol [PUT]

Post an answer to a protocol.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }

## Protocols [/rest/auth/v1/protocols]

### List protocols [GET]

List protocols.

+ Request (application/json)

        {

        }

+ Response 200 (application/json)

        {
            "init": "init"
        }

#Group Notifications

## Notification [/rest/auth/v1/notifications]

### Get the oldest notification unreaded [GET]

The Marketplace Posthaus add notifications into a queue, the queue order is from the oldest to the newest notification added.
These GET service is going to return the oldest notification, after these notification is going to mark as readed, the next notification is going to be avaliable to GET. 

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ
    
+ Response 200 (application/json)

        {
            "init": "init"
        }

## Notifications list [/rest/auth/v1/notes{?offset,limit}]

+ Parameters
    + offset (required, number, `40`) ... Posição de início da paginação
    + limit (required, number, `150`) ... Número máximo de produtos

+ Attributes (object)
    + notifications
        + token (string)
        + type (string)
        + additionalData
            + orderId (number)
        + events (array)
            + eventType (string)
            + event (string)
            + additionalData
            + orderId (number)
    + page (Page)


### Paginated notifications list [GET]
Get a paginated notifications list

+ Request (application/json)
    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 200 (application/json)
    + Attributes (Notifications list)

        {
          "notifications": [
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "NEW_ORDER",
              "additionalData": {
                "orderId": 45687920
              },
              "events": [
                {
                  "eventType": "getOrder",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/order/45687920",
                  "additionalData": {
                    "orderId": 45687920
                  }
                },
                {
                  "eventType": "markAsRead",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/note/markAsRead/45g65d4sdf5465sdf5",
                  "additionalData": {
                    "token": "45g65d4sdf5465sdf5"
                  }        
                }
              ]
            },
            {
              "token": "45g65d4sdf5465sdf5",
              "type": "NEW_ORDER",
              "additionalData": {
                "orderId": 45687920
              },
              "events": [
                {
                  "eventType": "getOrder",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/order/45687920",
                  "additionalData": {
                    "orderId": 45687920
                  }
                },
                {
                  "eventType": "markAsRead",
                  "event": "https://www.sellercenter.api.ecosweb.com.br/rest/note/markAsRead/45g65d4sdf5465sdf5",
                  "additionalData": {
                    "token": "45g65d4sdf5465sdf5"
                  }        
                }
              ]
            }
          ],
          "page": {
            "size": 2,
            "totalElements": 6,
            "totalPages": 3,
            "number": 1
          }
        }

## Mark as read [/rest/auth/v1/notes/markAsRead/{token}]

### Mark as read notification [PUT]

Mark as read a notification. If the notification won't be readed during 30 days, the SellerCenter is going to automatically mark as read it.

+ Parameters
    + token (required, string, `45g65d4sdf5465sdf5`) ... Token

+ Request (application/json)

    + Headers

            Accept: application/json
            Authorization: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE0Mzg4Mjc0NDN9.POonh-FngFnKeCgDfjjoemmF3Mt8HP2CThHwDLYuYnQ

+ Response 204